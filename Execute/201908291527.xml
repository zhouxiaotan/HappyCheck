<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="1.88"/>
    <errors>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvC00DRSelCondDlg&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvC00DRSelCondDlg&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.hpp" line="35"/>
            <symbol>HvC00DRSelCondDlg</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;updateCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;updateCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.hpp" line="22" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="43" info="Virtual function in base class"/>
            <symbol>updateCount</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;refreshList&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;refreshList&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.hpp" line="24" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="45" info="Virtual function in base class"/>
            <symbol>refreshList</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSelPatID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSelPatID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.hpp" line="26" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="47" info="Virtual function in base class"/>
            <symbol>getSelPatID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;canDeleteSelRecords&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;canDeleteSelRecords&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.hpp" line="28" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="57" info="Virtual function in base class"/>
            <symbol>canDeleteSelRecords</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;deleteSelRecords&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;deleteSelRecords&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.hpp" line="30" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="59" info="Virtual function in base class"/>
            <symbol>deleteSelRecords</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentOrder.cpp" line="232"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;updateCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;updateCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentIntrReport.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentIntrReport.hpp" line="22" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentIntrReport.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="43" info="Virtual function in base class"/>
            <symbol>updateCount</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;refreshList&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;refreshList&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentIntrReport.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentIntrReport.hpp" line="24" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentIntrReport.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="45" info="Virtual function in base class"/>
            <symbol>refreshList</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSelPatID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSelPatID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentIntrReport.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentIntrReport.hpp" line="26" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentIntrReport.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="47" info="Virtual function in base class"/>
            <symbol>getSelPatID</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentIntrReport.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentIntrReport.cpp" line="219"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rc&apos; is assigned a value that is never used." verbose="Variable &apos;rc&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentIntrReport.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentIntrReport.cpp" line="62"/>
            <symbol>rc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rcAll&apos; is assigned a value that is never used." verbose="Variable &apos;rcAll&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentIntrReport.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentIntrReport.cpp" line="65"/>
            <symbol>rcAll</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;updateCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;updateCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyTanto.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyTanto.hpp" line="26" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyTanto.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="43" info="Virtual function in base class"/>
            <symbol>updateCount</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;refreshList&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;refreshList&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyTanto.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyTanto.hpp" line="28" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyTanto.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="45" info="Virtual function in base class"/>
            <symbol>refreshList</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSelPatID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSelPatID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyTanto.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyTanto.hpp" line="30" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyTanto.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="47" info="Virtual function in base class"/>
            <symbol>getSelPatID</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyTanto.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyTanto.cpp" line="280"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyTanto.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyTanto.cpp" line="282"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;updateCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;updateCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyAllTanto.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyAllTanto.hpp" line="25" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyAllTanto.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="43" info="Virtual function in base class"/>
            <symbol>updateCount</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;refreshList&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;refreshList&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyAllTanto.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyAllTanto.hpp" line="27" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyAllTanto.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="45" info="Virtual function in base class"/>
            <symbol>refreshList</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSelPatID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSelPatID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyAllTanto.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyAllTanto.hpp" line="29" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyAllTanto.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="47" info="Virtual function in base class"/>
            <symbol>getSelPatID</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyAllTanto.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyAllTanto.cpp" line="563"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyAllTanto.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentNyAllTanto.cpp" line="565"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;updateCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;updateCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.hpp" line="23" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="43" info="Virtual function in base class"/>
            <symbol>updateCount</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;refreshList&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;refreshList&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.hpp" line="25" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="45" info="Virtual function in base class"/>
            <symbol>refreshList</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSelPatID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSelPatID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.hpp" line="27" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="47" info="Virtual function in base class"/>
            <symbol>getSelPatID</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.cpp" line="520"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;rc&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;rc&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.cpp" line="260"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.cpp" line="255"/>
            <symbol>rc</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;updateCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;updateCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.hpp" line="22" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="43" info="Virtual function in base class"/>
            <symbol>updateCount</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;refreshList&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;refreshList&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.hpp" line="24" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="45" info="Virtual function in base class"/>
            <symbol>refreshList</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSelPatID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSelPatID&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.hpp" line="26" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="47" info="Virtual function in base class"/>
            <symbol>getSelPatID</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;canDropRecord&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;canDropRecord&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.hpp" line="29" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="49" info="Virtual function in base class"/>
            <symbol>canDropRecord</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;dropRecord&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;dropRecord&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.hpp" line="31" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="53" info="Virtual function in base class"/>
            <symbol>dropRecord</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;canDeleteSelRecords&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;canDeleteSelRecords&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.hpp" line="34" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="57" info="Virtual function in base class"/>
            <symbol>canDeleteSelRecords</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;deleteSelRecords&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;deleteSelRecords&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.hpp" line="36" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="59" info="Virtual function in base class"/>
            <symbol>deleteSelRecords</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;deleteAllRecords&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;deleteAllRecords&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.hpp" line="37" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="60" info="Virtual function in base class"/>
            <symbol>deleteAllRecords</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;canEditNode&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;canEditNode&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.hpp" line="39" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="62" info="Virtual function in base class"/>
            <symbol>canEditNode</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;updateSelRecordTitle&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;updateSelRecordTitle&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.hpp" line="41" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgent.hpp" line="64" info="Virtual function in base class"/>
            <symbol>updateSelRecordTitle</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" line="236"/>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;rc&apos; shadows outer variable" verbose="Local variable &apos;rc&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" line="100" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentUser.cpp" line="60" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rc&apos; is assigned a value that is never used." verbose="Variable &apos;rc&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcC00DRSelAgentSummary.cpp" line="342"/>
            <symbol>rc</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcCisClipBoardForNurse.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.hpp" line="610"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcCisClipBoardForNurse.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcCisClipBoardForNurse.cpp" line="36"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcCisClipBoardForNurse.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HcCisClipBoardForNurse.cpp" line="46"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvHistNavi&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvHistNavi&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcHistNaviProc.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.hpp" line="95"/>
            <symbol>HvHistNavi</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HcHistNaviProc.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.hpp" line="61"/>
        </error>
        <error id="virtualCallInConstructor" severity="warning" msg="Virtual function &apos;clearAll&apos; is called from destructor &apos;~HuExArray()&apos; at line 21. Dynamic binding is not used." verbose="Virtual function &apos;clearAll&apos; is called from destructor &apos;~HuExArray()&apos; at line 21. Dynamic binding is not used.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30Common.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HuExArray.hpp" line="23" info="clearAll is a virtual function"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30Common.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HuExArray.hpp" line="21" info="Calling clearAll"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HmC22JissiList::m_sTeamName&apos; is not initialized in the constructor." verbose="Member variable &apos;HmC22JissiList::m_sTeamName&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HmC22JissiList.cpp" line="31"/>
            <symbol>HmC22JissiList::m_sTeamName</symbol>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;HmD30ContextMenuManager::CreateReportMenu&apos;" verbose="Unused private function: &apos;HmD30ContextMenuManager::CreateReportMenu&apos;" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30ContextMenuManager.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30ContextMenuManager.hpp" line="51"/>
            <symbol>HmD30ContextMenuManager::CreateReportMenu</symbol>
        </error>
        <error id="virtualCallInConstructor" severity="warning" msg="Virtual function &apos;clearAll&apos; is called from destructor &apos;~HuExArray &lt; void * &gt;()&apos; at line 21. Dynamic binding is not used." verbose="Virtual function &apos;clearAll&apos; is called from destructor &apos;~HuExArray &lt; void * &gt;()&apos; at line 21. Dynamic binding is not used.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30ContextMenuManager.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HuExArray.hpp" line="23" info="clearAll is a virtual function"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30ContextMenuManager.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HuExArray.hpp" line="21" info="Calling clearAll"/>
        </error>
        <error id="virtualCallInConstructor" severity="warning" msg="Virtual function &apos;clearAll&apos; is called from destructor &apos;~HuExArray &lt; ProcessGroupInfo * &gt;()&apos; at line 21. Dynamic binding is not used." verbose="Virtual function &apos;clearAll&apos; is called from destructor &apos;~HuExArray &lt; ProcessGroupInfo * &gt;()&apos; at line 21. Dynamic binding is not used.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30ContextMenuManager.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HuExArray.hpp" line="23" info="clearAll is a virtual function"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30ContextMenuManager.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HuExArray.hpp" line="21" info="Calling clearAll"/>
        </error>
        <error id="virtualCallInConstructor" severity="warning" msg="Virtual function &apos;clearAll&apos; is called from destructor &apos;~HuExArray &lt; HcRecordProc * &gt;()&apos; at line 21. Dynamic binding is not used." verbose="Virtual function &apos;clearAll&apos; is called from destructor &apos;~HuExArray &lt; HcRecordProc * &gt;()&apos; at line 21. Dynamic binding is not used.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30ContextMenuManager.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HuExArray.hpp" line="23" info="clearAll is a virtual function"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30ContextMenuManager.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HuExArray.hpp" line="21" info="Calling clearAll"/>
        </error>
        <error id="virtualCallInConstructor" severity="warning" msg="Virtual function &apos;clearAll&apos; is called from destructor &apos;~HuExArray &lt; TreportEx * &gt;()&apos; at line 21. Dynamic binding is not used." verbose="Virtual function &apos;clearAll&apos; is called from destructor &apos;~HuExArray &lt; TreportEx * &gt;()&apos; at line 21. Dynamic binding is not used.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30ContextMenuManager.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HuExArray.hpp" line="23" info="clearAll is a virtual function"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30ContextMenuManager.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HuExArray.hpp" line="21" info="Calling clearAll"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;ProcessGroupInfo&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;ProcessGroupInfo&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30ContextMenuManager.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HuProcessManager.hpp" line="20"/>
            <symbol>ProcessGroupInfo</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30ContextMenuManager.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30ContextMenuManager.cpp" line="536"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pImageVemr&apos; is assigned a value that is never used." verbose="Variable &apos;pImageVemr&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30ContextMenuManager.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HmD30ContextMenuManager.cpp" line="145"/>
            <symbol>pImageVemr</symbol>
        </error>
        <error id="virtualCallInConstructor" severity="warning" msg="Virtual function &apos;clearAll&apos; is called from destructor &apos;~HuExArray &lt; HmExRecord * &gt;()&apos; at line 21. Dynamic binding is not used." verbose="Virtual function &apos;clearAll&apos; is called from destructor &apos;~HuExArray &lt; HmExRecord * &gt;()&apos; at line 21. Dynamic binding is not used.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmPatKansaResult.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HuExArray.hpp" line="23" info="clearAll is a virtual function"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmPatKansaResult.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HuExArray.hpp" line="21" info="Calling clearAll"/>
        </error>
        <error id="virtualCallInConstructor" severity="warning" msg="Virtual function &apos;clearAll&apos; is called from destructor &apos;~HuExArray &lt; KansaItem * &gt;()&apos; at line 21. Dynamic binding is not used." verbose="Virtual function &apos;clearAll&apos; is called from destructor &apos;~HuExArray &lt; KansaItem * &gt;()&apos; at line 21. Dynamic binding is not used.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmPatKansaResult.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HuExArray.hpp" line="23" info="clearAll is a virtual function"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmPatKansaResult.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HuExArray.hpp" line="21" info="Calling clearAll"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HmPatKansaResult&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HmPatKansaResult&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmPatKansaResult.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HmPatKansaResult.hpp" line="48"/>
            <symbol>HmPatKansaResult</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;idx&apos; can be reduced." verbose="The scope of the variable &apos;idx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HmPatKansaResult.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HmPatKansaResult.cpp" line="234"/>
            <symbol>idx</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HpC21JissiList&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HpC21JissiList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpC21JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hpc21jissilist.hpp" line="21"/>
            <symbol>HpC21JissiList</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HpAnnaiPrintK&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HpAnnaiPrintK&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpAnnaiPrintK.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpAnnaiPrintK.hpp" line="28"/>
            <symbol>HpAnnaiPrintK</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KaGroup&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KaGroup&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpAnnaiPrintK.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpAnnaiPrintK.cpp" line="50"/>
            <symbol>KaGroup</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpAnnaiPrintK.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpAnnaiPrintK.cpp" line="352"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HpC22JissiList&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HpC22JissiList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpC22JissiList.hpp" line="20"/>
            <symbol>HpC22JissiList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HpPrintTeamList::m_TeamListHead&apos; is not initialized in the constructor." verbose="Member variable &apos;HpPrintTeamList::m_TeamListHead&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpPrintTeamList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpPrintTeamList.cpp" line="38"/>
            <symbol>HpPrintTeamList::m_TeamListHead</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HpD00RecPrint::m_RecTreatInfo&apos; is not initialized in the constructor." verbose="Member variable &apos;HpD00RecPrint::m_RecTreatInfo&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpD00RecPrint.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpD00RecPrint.cpp" line="104"/>
            <symbol>HpD00RecPrint::m_RecTreatInfo</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;commst!=NULL&apos; is redundant or there is possible null pointer dereference: commst." verbose="Either the condition &apos;commst!=NULL&apos; is redundant or there is possible null pointer dereference: commst." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpD00RecPrint.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpD00RecPrint.cpp" line="569" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpD00RecPrint.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpD00RecPrint.cpp" line="570" info="Assuming that condition &apos;commst!=NULL&apos; is not redundant"/>
            <symbol>commst</symbol>
        </error>
        <error id="pointerSize" severity="warning" msg="Size of pointer &apos;pName&apos; used instead of size of its data." verbose="Size of pointer &apos;pName&apos; used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write &apos;sizeof(*pName)&apos;." cwe="467">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpD00RecPrint.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpD00RecPrint.cpp" line="488"/>
        </error>
        <error id="pointerSize" severity="warning" msg="Size of pointer &apos;pName&apos; used instead of size of its data." verbose="Size of pointer &apos;pName&apos; used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write &apos;sizeof(*pName)&apos;." cwe="467">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpD00RecPrint.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpD00RecPrint.cpp" line="523"/>
        </error>
        <error id="pointerSize" severity="warning" msg="Size of pointer &apos;sel_text&apos; used instead of size of its data." verbose="Size of pointer &apos;sel_text&apos; used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write &apos;sizeof(*sel_text)&apos;." cwe="467">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpD00RecPrint.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpD00RecPrint.cpp" line="586"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;iNum&apos; is assigned a value that is never used." verbose="Variable &apos;iNum&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpD00RecPrint.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpD00RecPrint.cpp" line="301"/>
            <symbol>iNum</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;profValue&apos; can be reduced." verbose="The scope of the variable &apos;profValue&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HuProcessManager.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HuProcessManager.cpp" line="217"/>
            <symbol>profValue</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpPrintAllEMR.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpPrintAllEMR.cpp" line="163"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpPrintAllEMR.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpPrintAllEMR.cpp" line="1061"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;idx&apos; can be reduced." verbose="The scope of the variable &apos;idx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpPrintAllEMR.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpPrintAllEMR.cpp" line="371"/>
            <symbol>idx</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;rc&apos; shadows outer variable" verbose="Local variable &apos;rc&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpPrintAllEMR.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpPrintAllEMR.cpp" line="253" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HpPrintAllEMR.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HpPrintAllEMR.cpp" line="215" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvA31ShijiDtSetDlg::m_hComboKa&apos; is not initialized in the constructor." verbose="Member variable &apos;HvA31ShijiDtSetDlg::m_hComboKa&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31ShijiDtSetDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31ShijiDtSetDlg.cpp" line="34"/>
            <symbol>HvA31ShijiDtSetDlg::m_hComboKa</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvA31ShijiDtSetDlg::m_hListSijiDt&apos; is not initialized in the constructor." verbose="Member variable &apos;HvA31ShijiDtSetDlg::m_hListSijiDt&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31ShijiDtSetDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31ShijiDtSetDlg.cpp" line="34"/>
            <symbol>HvA31ShijiDtSetDlg::m_hListSijiDt</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvA31ShijiDtSetDlg&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvA31ShijiDtSetDlg&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31ShijiDtSetDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31ShijiDtSetDlg.hpp" line="42"/>
            <symbol>HvA31ShijiDtSetDlg</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;pszPtInfo1&apos; can be reduced." verbose="The scope of the variable &apos;pszPtInfo1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA11CHR.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA11CHR.cpp" line="135"/>
            <symbol>pszPtInfo1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nRet&apos; can be reduced." verbose="The scope of the variable &apos;nRet&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" line="936"/>
            <symbol>nRet</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;lRet&apos; shadows outer variable" verbose="Local variable &apos;lRet&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" line="1349" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" line="1323" info="Shadowed declaration"/>
            <symbol>lRet</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;lRet&apos; shadows outer variable" verbose="Local variable &apos;lRet&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" line="1384" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" line="1323" info="Shadowed declaration"/>
            <symbol>lRet</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;row&apos; is assigned a value that is never used." verbose="Variable &apos;row&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" line="306"/>
            <symbol>row</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;row&apos; is assigned a value that is never used." verbose="Variable &apos;row&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" line="313"/>
            <symbol>row</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nRet&apos; is assigned a value that is never used." verbose="Variable &apos;nRet&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" line="936"/>
            <symbol>nRet</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;numOut&apos; is assigned a value that is never used." verbose="Variable &apos;numOut&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" line="1697"/>
            <symbol>numOut</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nTgraphdNum&apos; is assigned a value that is never used." verbose="Variable &apos;nTgraphdNum&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" line="1698"/>
            <symbol>nTgraphdNum</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;set_no&apos; is assigned a value that is never used." verbose="Variable &apos;set_no&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" line="1699"/>
            <symbol>set_no</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;data_set_no&apos; is assigned a value that is never used." verbose="Variable &apos;data_set_no&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" line="1700"/>
            <symbol>data_set_no</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;lRet&apos; is assigned a value that is never used." verbose="Variable &apos;lRet&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" line="1747"/>
            <symbol>lRet</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: pt_id" verbose="Unused variable: pt_id" cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" line="1701"/>
            <symbol>pt_id</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: ka_cd" verbose="Unused variable: ka_cd" cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA31MilkDirect.cpp" line="1702"/>
            <symbol>ka_cd</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvAccessLog&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvAccessLog&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLog.hpp" line="20"/>
            <symbol>HvAccessLog</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;LogView&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;LogView&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLog.hpp" line="78"/>
            <symbol>LogView</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;SummaryView&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;SummaryView&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLog.hpp" line="96"/>
            <symbol>SummaryView</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;next&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;next&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLog.hpp" line="99" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLog.hpp" line="81" info="Virtual function in base class"/>
            <symbol>next</symbol>
        </error>
        <error id="clarifyCondition" severity="style" msg="Suspicious condition (assignment + comparison); Clarify expression with parentheses." verbose="Suspicious condition (assignment + comparison); Clarify expression with parentheses." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLog.cpp" line="460"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;LogView&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;LogView&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLogTab.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLogTab.hpp" line="94"/>
            <symbol>LogView</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;SummaryView&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;SummaryView&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLogTab.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLogTab.hpp" line="112"/>
            <symbol>SummaryView</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;next&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;next&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLogTab.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLogTab.hpp" line="115" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLogTab.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLogTab.hpp" line="97" info="Virtual function in base class"/>
            <symbol>next</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;rc&apos; shadows outer variable" verbose="Local variable &apos;rc&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLogTab.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLogTab.cpp" line="643" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLogTab.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLogTab.cpp" line="624" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="pointerSize" severity="warning" msg="Size of pointer &apos;pVstaffm&apos; used instead of size of its data." verbose="Size of pointer &apos;pVstaffm&apos; used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write &apos;sizeof(*pVstaffm)&apos;." cwe="467">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLogTab.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLogTab.cpp" line="154"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rc&apos; is assigned a value that is never used." verbose="Variable &apos;rc&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLogTab.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAccessLogTab.cpp" line="624"/>
            <symbol>rc</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvA71Panel&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvA71Panel&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.hpp" line="74"/>
            <symbol>HvA71Panel</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.hpp" line="105"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" line="139"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" line="142"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" line="2024"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nRow&apos; can be reduced." verbose="The scope of the variable &apos;nRow&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" line="755"/>
            <symbol>nRow</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" line="1409"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" line="1459"/>
            <symbol>n</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;ii&apos; shadows outer variable" verbose="Local variable &apos;ii&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" line="1037" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" line="753" info="Shadowed declaration"/>
            <symbol>ii</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;nOldHH&apos; shadows outer variable" verbose="Local variable &apos;nOldHH&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" line="1050" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" line="756" info="Shadowed declaration"/>
            <symbol>nOldHH</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;nOldMM&apos; shadows outer variable" verbose="Local variable &apos;nOldMM&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" line="1051" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" line="757" info="Shadowed declaration"/>
            <symbol>nOldMM</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;ii&apos; shadows outer variable" verbose="Local variable &apos;ii&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" line="1084" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" line="753" info="Shadowed declaration"/>
            <symbol>ii</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rc&apos; is assigned a value that is never used." verbose="Variable &apos;rc&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvA71Panel.cpp" line="2895"/>
            <symbol>rc</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvAllDataGet::m_hDlg&apos; is not initialized in the constructor." verbose="Member variable &apos;HvAllDataGet::m_hDlg&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="52"/>
            <symbol>HvAllDataGet::m_hDlg</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvAllDataGet::m_hRdMonth&apos; is not initialized in the constructor." verbose="Member variable &apos;HvAllDataGet::m_hRdMonth&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="52"/>
            <symbol>HvAllDataGet::m_hRdMonth</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvAllDataGet::m_hRdDecide&apos; is not initialized in the constructor." verbose="Member variable &apos;HvAllDataGet::m_hRdDecide&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="52"/>
            <symbol>HvAllDataGet::m_hRdDecide</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvAllDataGet::m_hDtStart&apos; is not initialized in the constructor." verbose="Member variable &apos;HvAllDataGet::m_hDtStart&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="52"/>
            <symbol>HvAllDataGet::m_hDtStart</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvAllDataGet::m_hBtOk&apos; is not initialized in the constructor." verbose="Member variable &apos;HvAllDataGet::m_hBtOk&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="52"/>
            <symbol>HvAllDataGet::m_hBtOk</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvAllDataGet::m_hRdAll&apos; is not initialized in the constructor." verbose="Member variable &apos;HvAllDataGet::m_hRdAll&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="52"/>
            <symbol>HvAllDataGet::m_hRdAll</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvAllDataGet::m_hRdMonthCnt&apos; is not initialized in the constructor." verbose="Member variable &apos;HvAllDataGet::m_hRdMonthCnt&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="52"/>
            <symbol>HvAllDataGet::m_hRdMonthCnt</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvAllDataGet::m_pStartDate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvAllDataGet::m_pStartDate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="52"/>
            <symbol>HvAllDataGet::m_pStartDate</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvAllDataGet::m_pOldestDate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvAllDataGet::m_pOldestDate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="52"/>
            <symbol>HvAllDataGet::m_pOldestDate</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvAllDataGet&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvAllDataGet&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.hpp" line="25"/>
            <symbol>HvAllDataGet</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The expression &apos;result == 0&apos; is always true." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="767"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="764" info="&apos;result&apos; is assigned value &apos;0&apos; here."/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nMonth&apos; can be reduced." verbose="The scope of the variable &apos;nMonth&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="683"/>
            <symbol>nMonth</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;nMonth&apos; shadows outer variable" verbose="Local variable &apos;nMonth&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="928" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="910" info="Shadowed declaration"/>
            <symbol>nMonth</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nMonth&apos; is assigned a value that is never used." verbose="Variable &apos;nMonth&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="683"/>
            <symbol>nMonth</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nMonth&apos; is assigned a value that is never used." verbose="Variable &apos;nMonth&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="910"/>
            <symbol>nMonth</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;colrBackground&apos; is assigned a value that is never used." verbose="Variable &apos;colrBackground&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvAllDataGet.cpp" line="1110"/>
            <symbol>colrBackground</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 6) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." verbose="%d in format string (no. 6) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." cwe="686">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" line="553"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 8) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." verbose="%d in format string (no. 8) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." cwe="686">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" line="565"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" line="44"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" line="145"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" line="332"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" line="826"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" line="1101"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" line="1202"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" line="1301"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;wv&apos; is assigned a value that is never used." verbose="Variable &apos;wv&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" line="935"/>
            <symbol>wv</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;hv&apos; is assigned a value that is never used." verbose="Variable &apos;hv&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBYPTSW.cpp" line="936"/>
            <symbol>hv</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvBloodRelationPt::m_hDlg&apos; is not initialized in the constructor." verbose="Member variable &apos;HvBloodRelationPt::m_hDlg&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBloodRelationPt.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBloodRelationPt.cpp" line="34"/>
            <symbol>HvBloodRelationPt::m_hDlg</symbol>
        </error>
        <error id="identicalConditionAfterEarlyExit" severity="warning" msg="Identical condition &apos;rc&apos;, second condition is always false" verbose="Identical condition &apos;rc&apos;, second condition is always false" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBloodRelationPt.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBloodRelationPt.cpp" line="88" info="second condition"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBloodRelationPt.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBloodRelationPt.cpp" line="86" info="first condition"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvBabyGrowthDialog::m_hRadioNewborn&apos; is not initialized in the constructor." verbose="Member variable &apos;HvBabyGrowthDialog::m_hRadioNewborn&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="44"/>
            <symbol>HvBabyGrowthDialog::m_hRadioNewborn</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvBabyGrowthDialog::m_hRadioBaby&apos; is not initialized in the constructor." verbose="Member variable &apos;HvBabyGrowthDialog::m_hRadioBaby&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="44"/>
            <symbol>HvBabyGrowthDialog::m_hRadioBaby</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvBabyGrowthDialog::m_hRadioKids&apos; is not initialized in the constructor." verbose="Member variable &apos;HvBabyGrowthDialog::m_hRadioKids&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="44"/>
            <symbol>HvBabyGrowthDialog::m_hRadioKids</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvBabyGrowthDialog::m_hRadioStudent&apos; is not initialized in the constructor." verbose="Member variable &apos;HvBabyGrowthDialog::m_hRadioStudent&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="44"/>
            <symbol>HvBabyGrowthDialog::m_hRadioStudent</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvBabyGrowthDialog::m_hRadioFirststDeliver&apos; is not initialized in the constructor." verbose="Member variable &apos;HvBabyGrowthDialog::m_hRadioFirststDeliver&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="44"/>
            <symbol>HvBabyGrowthDialog::m_hRadioFirststDeliver</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvBabyGrowthDialog::m_hRadioHaveDeliver&apos; is not initialized in the constructor." verbose="Member variable &apos;HvBabyGrowthDialog::m_hRadioHaveDeliver&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="44"/>
            <symbol>HvBabyGrowthDialog::m_hRadioHaveDeliver</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvBabyGrowthDialog::m_hDateEstimateDeliverDate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvBabyGrowthDialog::m_hDateEstimateDeliverDate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="44"/>
            <symbol>HvBabyGrowthDialog::m_hDateEstimateDeliverDate</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvBabyGrowthDialog::m_hDateActualDeliverDate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvBabyGrowthDialog::m_hDateActualDeliverDate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="44"/>
            <symbol>HvBabyGrowthDialog::m_hDateActualDeliverDate</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvBabyGrowthDialog::m_hTextPregnantWeeks&apos; is not initialized in the constructor." verbose="Member variable &apos;HvBabyGrowthDialog::m_hTextPregnantWeeks&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="44"/>
            <symbol>HvBabyGrowthDialog::m_hTextPregnantWeeks</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvBabyGrowthDialog::m_hTextPregnantDays&apos; is not initialized in the constructor." verbose="Member variable &apos;HvBabyGrowthDialog::m_hTextPregnantDays&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="44"/>
            <symbol>HvBabyGrowthDialog::m_hTextPregnantDays</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvBabyGrowthDialog::m_hTextBirthWeight&apos; is not initialized in the constructor." verbose="Member variable &apos;HvBabyGrowthDialog::m_hTextBirthWeight&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="44"/>
            <symbol>HvBabyGrowthDialog::m_hTextBirthWeight</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvBabyGrowthDialog::m_hBtnFetchDatat&apos; is not initialized in the constructor." verbose="Member variable &apos;HvBabyGrowthDialog::m_hBtnFetchDatat&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="44"/>
            <symbol>HvBabyGrowthDialog::m_hBtnFetchDatat</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvBabyGrowthDialog::m_pPanel&apos; is not initialized in the constructor." verbose="Member variable &apos;HvBabyGrowthDialog::m_pPanel&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="44"/>
            <symbol>HvBabyGrowthDialog::m_pPanel</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvBabyGrowthDialog::isNoSelectedNgrow&apos; is not initialized in the constructor." verbose="Member variable &apos;HvBabyGrowthDialog::isNoSelectedNgrow&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="44"/>
            <symbol>HvBabyGrowthDialog::isNoSelectedNgrow</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBloodRelationPt.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBloodRelationPt.cpp" line="131"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBloodRelationPt.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBloodRelationPt.cpp" line="249"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvBabyGrowthDialog&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvBabyGrowthDialog&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.hpp" line="32"/>
            <symbol>HvBabyGrowthDialog</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sBuff&apos; can be reduced." verbose="The scope of the variable &apos;sBuff&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBloodRelationPt.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBloodRelationPt.cpp" line="121"/>
            <symbol>sBuff</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." cwe="686">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="176"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." cwe="686">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="356"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." cwe="686">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="382"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." cwe="686">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="989"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="471"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="1212"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="1213"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="1285"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;strMeasuredDate&apos; can be reduced." verbose="The scope of the variable &apos;strMeasuredDate&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="504"/>
            <symbol>strMeasuredDate</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;td&apos; shadows outer variable" verbose="Local variable &apos;td&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="677" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="584" info="Shadowed declaration"/>
            <symbol>td</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;table&apos; shadows outer variable" verbose="Local variable &apos;table&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="1541" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="1517" info="Shadowed declaration"/>
            <symbol>table</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;rec&apos; shadows outer variable" verbose="Local variable &apos;rec&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="1939" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="1925" info="Shadowed declaration"/>
            <symbol>rec</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;rec&apos; shadows outer variable" verbose="Local variable &apos;rec&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="1958" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvBabyGrowthDialog.cpp" line="1939" info="Shadowed declaration"/>
            <symbol>rec</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelCondDlg::m_hEditPID&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelCondDlg::m_hEditPID&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" line="32"/>
            <symbol>HvC00DRSelCondDlg::m_hEditPID</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelCondDlg::m_hEditName&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelCondDlg::m_hEditName&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" line="32"/>
            <symbol>HvC00DRSelCondDlg::m_hEditName</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelCondDlg::m_hRadioMale&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelCondDlg::m_hRadioMale&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" line="32"/>
            <symbol>HvC00DRSelCondDlg::m_hRadioMale</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelCondDlg::m_hRadioFemale&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelCondDlg::m_hRadioFemale&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" line="32"/>
            <symbol>HvC00DRSelCondDlg::m_hRadioFemale</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelCondDlg::m_hDateBirth&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelCondDlg::m_hDateBirth&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" line="32"/>
            <symbol>HvC00DRSelCondDlg::m_hDateBirth</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelCondDlg::m_hEditAgeFrom&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelCondDlg::m_hEditAgeFrom&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" line="32"/>
            <symbol>HvC00DRSelCondDlg::m_hEditAgeFrom</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelCondDlg::m_hEditAgeTo&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelCondDlg::m_hEditAgeTo&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" line="32"/>
            <symbol>HvC00DRSelCondDlg::m_hEditAgeTo</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelCondDlg::m_hDateLastFrom&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelCondDlg::m_hDateLastFrom&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" line="32"/>
            <symbol>HvC00DRSelCondDlg::m_hDateLastFrom</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelCondDlg::m_hDateLastTo&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelCondDlg::m_hDateLastTo&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" line="32"/>
            <symbol>HvC00DRSelCondDlg::m_hDateLastTo</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelCondDlg::m_hRadioNyuinY&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelCondDlg::m_hRadioNyuinY&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" line="32"/>
            <symbol>HvC00DRSelCondDlg::m_hRadioNyuinY</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelCondDlg::m_hRadioNyuinN&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelCondDlg::m_hRadioNyuinN&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" line="32"/>
            <symbol>HvC00DRSelCondDlg::m_hRadioNyuinN</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelCondDlg::m_hButtonClear&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelCondDlg::m_hButtonClear&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" line="32"/>
            <symbol>HvC00DRSelCondDlg::m_hButtonClear</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelCondDlg::m_hRadioSearch1&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelCondDlg::m_hRadioSearch1&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" line="32"/>
            <symbol>HvC00DRSelCondDlg::m_hRadioSearch1</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelCondDlg::m_hRadioSearch2&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelCondDlg::m_hRadioSearch2&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" line="32"/>
            <symbol>HvC00DRSelCondDlg::m_hRadioSearch2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;buff&apos; can be reduced." verbose="The scope of the variable &apos;buff&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelCondDlg.cpp" line="319"/>
            <symbol>buff</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPropDlg::m_hRadioSelfOnly&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPropDlg::m_hRadioSelfOnly&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" line="42"/>
            <symbol>HvC00DRSelPropDlg::m_hRadioSelfOnly</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPropDlg::m_hRadioShType&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPropDlg::m_hRadioShType&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" line="42"/>
            <symbol>HvC00DRSelPropDlg::m_hRadioShType</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPropDlg::m_hRadioKa&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPropDlg::m_hRadioKa&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" line="42"/>
            <symbol>HvC00DRSelPropDlg::m_hRadioKa</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPropDlg::m_hRadioGroup&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPropDlg::m_hRadioGroup&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" line="42"/>
            <symbol>HvC00DRSelPropDlg::m_hRadioGroup</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPropDlg::m_hRadioByoto&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPropDlg::m_hRadioByoto&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" line="42"/>
            <symbol>HvC00DRSelPropDlg::m_hRadioByoto</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPropDlg::m_hRadioNoLimit&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPropDlg::m_hRadioNoLimit&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" line="42"/>
            <symbol>HvC00DRSelPropDlg::m_hRadioNoLimit</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPropDlg::m_hComboShType&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPropDlg::m_hComboShType&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" line="42"/>
            <symbol>HvC00DRSelPropDlg::m_hComboShType</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPropDlg::m_hComboKa&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPropDlg::m_hComboKa&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" line="42"/>
            <symbol>HvC00DRSelPropDlg::m_hComboKa</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPropDlg::m_hComboGroup&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPropDlg::m_hComboGroup&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" line="42"/>
            <symbol>HvC00DRSelPropDlg::m_hComboGroup</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPropDlg::m_hComboByoto&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPropDlg::m_hComboByoto&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" line="42"/>
            <symbol>HvC00DRSelPropDlg::m_hComboByoto</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPropDlg::m_hRadioSelfOnly2&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPropDlg::m_hRadioSelfOnly2&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" line="42"/>
            <symbol>HvC00DRSelPropDlg::m_hRadioSelfOnly2</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPropDlg::m_hRadioNoLimit2&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPropDlg::m_hRadioNoLimit2&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" line="42"/>
            <symbol>HvC00DRSelPropDlg::m_hRadioNoLimit2</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPropDlg::nShareGroupMode&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPropDlg::nShareGroupMode&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPropDlg.cpp" line="42"/>
            <symbol>HvC00DRSelPropDlg::nShareGroupMode</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPage2::m_hTree&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPage2::m_hTree&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="93"/>
            <symbol>HvC00DRSelPage2::m_hTree</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPage2::m_hButtonNewNode&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPage2::m_hButtonNewNode&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="93"/>
            <symbol>HvC00DRSelPage2::m_hButtonNewNode</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPage2::m_hButtonRenameNode&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPage2::m_hButtonRenameNode&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="93"/>
            <symbol>HvC00DRSelPage2::m_hButtonRenameNode</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPage2::m_hButtonDeleteNode&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPage2::m_hButtonDeleteNode&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="93"/>
            <symbol>HvC00DRSelPage2::m_hButtonDeleteNode</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPage2::m_hButtonEditNodeProp&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPage2::m_hButtonEditNodeProp&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="93"/>
            <symbol>HvC00DRSelPage2::m_hButtonEditNodeProp</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPage2::m_hButtonUpNode&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPage2::m_hButtonUpNode&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="93"/>
            <symbol>HvC00DRSelPage2::m_hButtonUpNode</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPage2::m_hButtonDownNode&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPage2::m_hButtonDownNode&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="93"/>
            <symbol>HvC00DRSelPage2::m_hButtonDownNode</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPage2::m_hButtonLeftNode&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPage2::m_hButtonLeftNode&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="93"/>
            <symbol>HvC00DRSelPage2::m_hButtonLeftNode</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPage2::m_hButtonRightNode&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPage2::m_hButtonRightNode&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="93"/>
            <symbol>HvC00DRSelPage2::m_hButtonRightNode</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPage2::m_hLabelDebug&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPage2::m_hLabelDebug&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="93"/>
            <symbol>HvC00DRSelPage2::m_hLabelDebug</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPage2::m_hSplit&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPage2::m_hSplit&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="93"/>
            <symbol>HvC00DRSelPage2::m_hSplit</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPage2::m_hList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPage2::m_hList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="93"/>
            <symbol>HvC00DRSelPage2::m_hList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPage2::m_hButtonOpenKarte&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPage2::m_hButtonOpenKarte&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="93"/>
            <symbol>HvC00DRSelPage2::m_hButtonOpenKarte</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPage2::m_hButtonDelete&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPage2::m_hButtonDelete&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="93"/>
            <symbol>HvC00DRSelPage2::m_hButtonDelete</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00DRSelPage2::m_hButtonSearch&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00DRSelPage2::m_hButtonSearch&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="93"/>
            <symbol>HvC00DRSelPage2::m_hButtonSearch</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="438"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="451"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="1109"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="1519"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="1804"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="1805"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="2456"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;strSql&apos; can be reduced." verbose="The scope of the variable &apos;strSql&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="2622"/>
            <symbol>strSql</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;no&apos; shadows outer variable" verbose="Local variable &apos;no&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="874" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="864" info="Shadowed declaration"/>
            <symbol>no</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvC00Paper1RMDialog&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvC00Paper1RMDialog&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1RMDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1RMDialog.hpp" line="22"/>
            <symbol>HvC00Paper1RMDialog</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;n&apos; is assigned a value that is never used." verbose="Variable &apos;n&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="616"/>
            <symbol>n</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;no&apos; is assigned a value that is never used." verbose="Variable &apos;no&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="755"/>
            <symbol>no</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rec&apos; is assigned a value that is never used." verbose="Variable &apos;rec&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="961"/>
            <symbol>rec</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rc&apos; is assigned a value that is never used." verbose="Variable &apos;rc&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="1102"/>
            <symbol>rc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;parent&apos; is assigned a value that is never used." verbose="Variable &apos;parent&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="1624"/>
            <symbol>parent</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bFirst&apos; is assigned a value that is never used." verbose="Variable &apos;bFirst&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="2761"/>
            <symbol>bFirst</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bFirst&apos; is assigned a value that is never used." verbose="Variable &apos;bFirst&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="2769"/>
            <symbol>bFirst</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rc&apos; is assigned a value that is never used." verbose="Variable &apos;rc&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="2858"/>
            <symbol>rc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rc&apos; is assigned a value that is never used." verbose="Variable &apos;rc&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00DRSelPage2.cpp" line="2865"/>
            <symbol>rc</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00RDAddPage::m_hwnd&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00RDAddPage::m_hwnd&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDAddPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDAddPage.cpp" line="27"/>
            <symbol>HvC00RDAddPage::m_hwnd</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00RDAddPage::m_hList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00RDAddPage::m_hList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDAddPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDAddPage.cpp" line="27"/>
            <symbol>HvC00RDAddPage::m_hList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00RDAddPage::m_hStaff&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00RDAddPage::m_hStaff&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDAddPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDAddPage.cpp" line="27"/>
            <symbol>HvC00RDAddPage::m_hStaff</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00RDAddPage::m_hKacd&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00RDAddPage::m_hKacd&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDAddPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDAddPage.cpp" line="27"/>
            <symbol>HvC00RDAddPage::m_hKacd</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00RDAddPage::m_hEditName&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00RDAddPage::m_hEditName&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDAddPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDAddPage.cpp" line="27"/>
            <symbol>HvC00RDAddPage::m_hEditName</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00RDAddPage::m_hEditID&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00RDAddPage::m_hEditID&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDAddPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDAddPage.cpp" line="27"/>
            <symbol>HvC00RDAddPage::m_hEditID</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvC00RDAddPage&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvC00RDAddPage&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDAddPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDAddPage.hpp" line="21"/>
            <symbol>HvC00RDAddPage</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00Paper1Page::m_hOccupation&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00Paper1Page::m_hOccupation&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="154"/>
            <symbol>HvC00Paper1Page::m_hOccupation</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00Paper1Page::m_hComment1&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00Paper1Page::m_hComment1&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="154"/>
            <symbol>HvC00Paper1Page::m_hComment1</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00Paper1Page::m_hComment2&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00Paper1Page::m_hComment2&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="154"/>
            <symbol>HvC00Paper1Page::m_hComment2</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00Paper1Page::m_nByomeiMaskMode&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00Paper1Page::m_nByomeiMaskMode&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="154"/>
            <symbol>HvC00Paper1Page::m_nByomeiMaskMode</symbol>
        </error>
        <error id="identicalConditionAfterEarlyExit" severity="warning" msg="Identical condition &apos;tenkiDate==NULL&apos;, second condition is always false" verbose="Identical condition &apos;tenkiDate==NULL&apos;, second condition is always false" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="1735" info="second condition"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="1731" info="first condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="994" info="Second condition"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="988" info="First condition"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;tenkiDate==NULL&apos; is redundant or there is possible null pointer dereference: tenkiDate." verbose="Either the condition &apos;tenkiDate==NULL&apos; is redundant or there is possible null pointer dereference: tenkiDate." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="1736" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="1735" info="Assuming that condition &apos;tenkiDate==NULL&apos; is not redundant"/>
            <symbol>tenkiDate</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="963"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="1581"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="1611"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="2345"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="2389"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="2582"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00RDSelPage::m_hwnd&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00RDSelPage::m_hwnd&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="34"/>
            <symbol>HvC00RDSelPage::m_hwnd</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00RDSelPage::m_hList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00RDSelPage::m_hList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="34"/>
            <symbol>HvC00RDSelPage::m_hList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00RDSelPage::m_hListSanSyo&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00RDSelPage::m_hListSanSyo&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="34"/>
            <symbol>HvC00RDSelPage::m_hListSanSyo</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00RDSelPage::m_hStaff&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00RDSelPage::m_hStaff&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="34"/>
            <symbol>HvC00RDSelPage::m_hStaff</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00RDSelPage::m_hKacd&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00RDSelPage::m_hKacd&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="34"/>
            <symbol>HvC00RDSelPage::m_hKacd</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00RDSelPage::m_hStop&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00RDSelPage::m_hStop&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="34"/>
            <symbol>HvC00RDSelPage::m_hStop</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00RDSelPage::m_nShIndex&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00RDSelPage::m_nShIndex&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="34"/>
            <symbol>HvC00RDSelPage::m_nShIndex</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvC00RDSelPage&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvC00RDSelPage&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.hpp" line="24"/>
            <symbol>HvC00RDSelPage</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;arrayOut!=NULL&apos; is redundant or there is possible null pointer dereference: arrayOut." verbose="Either the condition &apos;arrayOut!=NULL&apos; is redundant or there is possible null pointer dereference: arrayOut." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="882" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="906" info="Assuming that condition &apos;arrayOut!=NULL&apos; is not redundant"/>
            <symbol>arrayOut</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;arrayOut!=NULL&apos; is redundant or there is possible null pointer dereference: arrayOut." verbose="Either the condition &apos;arrayOut!=NULL&apos; is redundant or there is possible null pointer dereference: arrayOut." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="885" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="906" info="Assuming that condition &apos;arrayOut!=NULL&apos; is not redundant"/>
            <symbol>arrayOut</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;arrayOut!=NULL&apos; is redundant or there is possible null pointer dereference: arrayOut." verbose="Either the condition &apos;arrayOut!=NULL&apos; is redundant or there is possible null pointer dereference: arrayOut." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="886" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="906" info="Assuming that condition &apos;arrayOut!=NULL&apos; is not redundant"/>
            <symbol>arrayOut</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;arrayOut!=NULL&apos; is redundant or there is possible null pointer dereference: arrayOut." verbose="Either the condition &apos;arrayOut!=NULL&apos; is redundant or there is possible null pointer dereference: arrayOut." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="887" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="906" info="Assuming that condition &apos;arrayOut!=NULL&apos; is not redundant"/>
            <symbol>arrayOut</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;arrayOut!=NULL&apos; is redundant or there is possible null pointer dereference: arrayOut." verbose="Either the condition &apos;arrayOut!=NULL&apos; is redundant or there is possible null pointer dereference: arrayOut." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="890" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="906" info="Assuming that condition &apos;arrayOut!=NULL&apos; is not redundant"/>
            <symbol>arrayOut</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;arrayOut!=NULL&apos; is redundant or there is possible null pointer dereference: arrayOut." verbose="Either the condition &apos;arrayOut!=NULL&apos; is redundant or there is possible null pointer dereference: arrayOut." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="893" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="906" info="Assuming that condition &apos;arrayOut!=NULL&apos; is not redundant"/>
            <symbol>arrayOut</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;arrayOut!=NULL&apos; is redundant or there is possible null pointer dereference: arrayOut." verbose="Either the condition &apos;arrayOut!=NULL&apos; is redundant or there is possible null pointer dereference: arrayOut." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="898" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="906" info="Assuming that condition &apos;arrayOut!=NULL&apos; is not redundant"/>
            <symbol>arrayOut</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;arrayOut!=NULL&apos; is redundant or there is possible null pointer dereference: arrayOut." verbose="Either the condition &apos;arrayOut!=NULL&apos; is redundant or there is possible null pointer dereference: arrayOut." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="899" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="906" info="Assuming that condition &apos;arrayOut!=NULL&apos; is not redundant"/>
            <symbol>arrayOut</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="108"/>
            <symbol>n</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;nCnt&apos; shadows outer variable" verbose="Local variable &apos;nCnt&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="185" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="179" info="Shadowed declaration"/>
            <symbol>nCnt</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;pStaff&apos; shadows outer variable" verbose="Local variable &apos;pStaff&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="553" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="513" info="Shadowed declaration"/>
            <symbol>pStaff</symbol>
        </error>
        <error id="sprintfOverlappingData" severity="error" msg="Undefined behavior: Variable &apos;szOrgLine&apos; is used as parameter and destination in sprintf()." verbose="The variable &apos;szOrgLine&apos; is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): &quot;If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.&quot;" cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="1369"/>
            <symbol>szOrgLine</symbol>
        </error>
        <error id="sprintfOverlappingData" severity="error" msg="Undefined behavior: Variable &apos;szOrgLine&apos; is used as parameter and destination in sprintf()." verbose="The variable &apos;szOrgLine&apos; is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): &quot;If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.&quot;" cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="1377"/>
            <symbol>szOrgLine</symbol>
        </error>
        <error id="sprintfOverlappingData" severity="error" msg="Undefined behavior: Variable &apos;szOrgLine&apos; is used as parameter and destination in sprintf()." verbose="The variable &apos;szOrgLine&apos; is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): &quot;If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.&quot;" cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00Paper1Page.cpp" line="1383"/>
            <symbol>szOrgLine</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nTmpCnt&apos; is assigned a value that is never used." verbose="Variable &apos;nTmpCnt&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00RDSelPage.cpp" line="234"/>
            <symbol>nTmpCnt</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndPage&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndPage&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndPage</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndCheckByomeiStartDate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndCheckByomeiStartDate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndCheckByomeiStartDate</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndByomeiStartDateBegin&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndByomeiStartDateBegin&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndByomeiStartDateBegin</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndByomeiStartDateEnd&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndByomeiStartDateEnd&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndByomeiStartDateEnd</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndCheckByomeiTenkiDate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndCheckByomeiTenkiDate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndCheckByomeiTenkiDate</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndByomeiTenkiDateBegin&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndByomeiTenkiDateBegin&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndByomeiTenkiDateBegin</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndByomeiTenkiDateEnd&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndByomeiTenkiDateEnd&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndByomeiTenkiDateEnd</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndKakuninByomei&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndKakuninByomei&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndKakuninByomei</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndUtagaiByomei&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndUtagaiByomei&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndUtagaiByomei</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndSindanByomei&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndSindanByomei&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndSindanByomei</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndSonotaByomei&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndSonotaByomei&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndSonotaByomei</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndKeizoku&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndKeizoku&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndKeizoku</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndChiyu&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndChiyu&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndChiyu</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndSibo&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndSibo&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndSibo</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndCyusi&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndCyusi&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndCyusi</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndKekai&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndKekai&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndKekai</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndTeni&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndTeni&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndTeni</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndCancel&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndCancel&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndCancel</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndSinryoka&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndSinryoka&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndSinryoka</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndCheckPtid&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndCheckPtid&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndCheckPtid</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndEditPtid&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndEditPtid&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndEditPtid</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndCheckByomeiName&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndCheckByomeiName&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndCheckByomeiName</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndEditByomeiName&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndEditByomeiName&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndEditByomeiName</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndCheckByomeiIcd&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndCheckByomeiIcd&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndCheckByomeiIcd</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndEditByomeiIcd&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndEditByomeiIcd&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndEditByomeiIcd</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndKensu&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndKensu&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndKensu</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndButtonOpenKarte&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndButtonOpenKarte&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndButtonOpenKarte</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC00SymptomList::hwndButtonSearch&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC00SymptomList::hwndButtonSearch&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="30"/>
            <symbol>HvC00SymptomList::hwndButtonSearch</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." cwe="686">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="279"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." cwe="686">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="323"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." cwe="686">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="895"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;id&apos; is assigned a value that is never used." verbose="Variable &apos;id&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC00SymptomList.cpp" line="935"/>
            <symbol>id</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvC21C22LotEdit&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvC21C22LotEdit&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.hpp" line="29"/>
            <symbol>HvC21C22LotEdit</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" line="52"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;index&apos; can be reduced." verbose="The scope of the variable &apos;index&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" line="658"/>
            <symbol>index</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;strlen(m_pTc00lot.ka_cd)&apos; is less than zero." verbose="The unsigned expression &apos;strlen(m_pTc00lot.ka_cd)&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" line="426" info="Unsigned less than zero"/>
            <symbol>strlen(m_pTc00lot.ka_cd)</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;strlen(bar)&apos; is less than zero." verbose="The unsigned expression &apos;strlen(bar)&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" line="523" info="Unsigned less than zero"/>
            <symbol>strlen(bar)</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;strlen(m_pTc00lot.pt_id)&apos; is less than zero." verbose="The unsigned expression &apos;strlen(m_pTc00lot.pt_id)&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" line="969" info="Unsigned less than zero"/>
            <symbol>strlen(m_pTc00lot.pt_id)</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;strlen(m_pTc00lot.ykh_id)&apos; is less than zero." verbose="The unsigned expression &apos;strlen(m_pTc00lot.ykh_id)&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" line="978" info="Unsigned less than zero"/>
            <symbol>strlen(m_pTc00lot.ykh_id)</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;strlen(m_pTc00lot.lot_no)&apos; is less than zero." verbose="The unsigned expression &apos;strlen(m_pTc00lot.lot_no)&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" line="982" info="Unsigned less than zero"/>
            <symbol>strlen(m_pTc00lot.lot_no)</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;strlen(m_pTc00lot.ka_cd)&apos; is less than zero." verbose="The unsigned expression &apos;strlen(m_pTc00lot.ka_cd)&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" line="986" info="Unsigned less than zero"/>
            <symbol>strlen(m_pTc00lot.ka_cd)</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bRet&apos; is assigned a value that is never used." verbose="Variable &apos;bRet&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22LotEdit.cpp" line="115"/>
            <symbol>bRet</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21C22Tokusei::m_hwndList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21C22Tokusei::m_hwndList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" line="87"/>
            <symbol>HvC21C22Tokusei::m_hwndList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21C22Tokusei::m_hwndComboKa&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21C22Tokusei::m_hwndComboKa&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" line="87"/>
            <symbol>HvC21C22Tokusei::m_hwndComboKa</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21C22Tokusei::m_hwndYear&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21C22Tokusei::m_hwndYear&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" line="87"/>
            <symbol>HvC21C22Tokusei::m_hwndYear</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21C22Tokusei::m_hwndMonth&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21C22Tokusei::m_hwndMonth&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" line="87"/>
            <symbol>HvC21C22Tokusei::m_hwndMonth</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21C22Tokusei::m_hwndDateFrom&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21C22Tokusei::m_hwndDateFrom&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" line="87"/>
            <symbol>HvC21C22Tokusei::m_hwndDateFrom</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21C22Tokusei::m_hwndDateTo&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21C22Tokusei::m_hwndDateTo&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" line="87"/>
            <symbol>HvC21C22Tokusei::m_hwndDateTo</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21C22Tokusei::bStart&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21C22Tokusei::bStart&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" line="87"/>
            <symbol>HvC21C22Tokusei::bStart</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;tokusei.nKa!=CB_ERR&apos; is always true" verbose="Condition &apos;tokusei.nKa!=CB_ERR&apos; is always true" cwe="571">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" line="1108" info="Condition &apos;tokusei.nKa!=CB_ERR&apos; is always true"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cBuf&apos; can be reduced." verbose="The scope of the variable &apos;cBuf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" line="332"/>
            <symbol>cBuf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cBuf&apos; can be reduced." verbose="The scope of the variable &apos;cBuf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" line="1138"/>
            <symbol>cBuf</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;strlen(tokusei.sYear)&apos; is less than zero." verbose="The unsigned expression &apos;strlen(tokusei.sYear)&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21C22Tokusei.cpp" line="845" info="Unsigned less than zero"/>
            <symbol>strlen(tokusei.sYear)</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvC21JissiList&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvC21JissiList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvc21jissilist.hpp" line="36"/>
            <symbol>HvC21JissiList</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" line="90"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" line="93"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" line="112"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" line="1274"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" line="1627"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" line="1765"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" line="2633"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" line="2880"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" line="2882"/>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;nBuffLen&apos; shadows outer variable" verbose="Local variable &apos;nBuffLen&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" line="3328" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" line="3308" info="Shadowed declaration"/>
            <symbol>nBuffLen</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;tagIPPANDISPDATA::sDisp2&apos; is never used." verbose="struct member &apos;tagIPPANDISPDATA::sDisp2&apos; is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21JissiList.cpp" line="2171"/>
            <symbol>tagIPPANDISPDATA::sDisp2</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" line="62"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nRet&apos; can be reduced." verbose="The scope of the variable &apos;nRet&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" line="251"/>
            <symbol>nRet</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;pByotoCode&apos; can be reduced." verbose="The scope of the variable &apos;pByotoCode&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" line="252"/>
            <symbol>pByotoCode</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;lSqlrc&apos; can be reduced." verbose="The scope of the variable &apos;lSqlrc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" line="407"/>
            <symbol>lSqlrc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nRet&apos; can be reduced." verbose="The scope of the variable &apos;nRet&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" line="764"/>
            <symbol>nRet</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nRet&apos; is assigned a value that is never used." verbose="Variable &apos;nRet&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" line="251"/>
            <symbol>nRet</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pByotoCode&apos; is assigned a value that is never used." verbose="Variable &apos;pByotoCode&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" line="252"/>
            <symbol>pByotoCode</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bSession&apos; is assigned a value that is never used." verbose="Variable &apos;bSession&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" line="258"/>
            <symbol>bSession</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nRet&apos; is assigned a value that is never used." verbose="Variable &apos;nRet&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" line="556"/>
            <symbol>nRet</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nRet&apos; is assigned a value that is never used." verbose="Variable &apos;nRet&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21TeijiList.cpp" line="764"/>
            <symbol>nRet</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" line="56"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nRet&apos; can be reduced." verbose="The scope of the variable &apos;nRet&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" line="258"/>
            <symbol>nRet</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;pByotoCode&apos; can be reduced." verbose="The scope of the variable &apos;pByotoCode&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" line="259"/>
            <symbol>pByotoCode</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;lSqlrc&apos; can be reduced." verbose="The scope of the variable &apos;lSqlrc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" line="417"/>
            <symbol>lSqlrc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nRet&apos; can be reduced." verbose="The scope of the variable &apos;nRet&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" line="857"/>
            <symbol>nRet</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nRet&apos; is assigned a value that is never used." verbose="Variable &apos;nRet&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" line="258"/>
            <symbol>nRet</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pByotoCode&apos; is assigned a value that is never used." verbose="Variable &apos;pByotoCode&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" line="259"/>
            <symbol>pByotoCode</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bSession&apos; is assigned a value that is never used." verbose="Variable &apos;bSession&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" line="265"/>
            <symbol>bSession</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nRet&apos; is assigned a value that is never used." verbose="Variable &apos;nRet&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22MjisList.cpp" line="857"/>
            <symbol>nRet</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvC22JissiList&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvC22JissiList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.hpp" line="35"/>
            <symbol>HvC22JissiList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndPage&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndPage&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndPage</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndPatByDrList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndPatByDrList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndPatByDrList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndPatMRSAList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndPatMRSAList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndPatMRSAList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndOpenKarte&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndOpenKarte&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndOpenKarte</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndCSV&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndCSV&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndCSV</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndSrchPt&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndSrchPt&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndSrchPt</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndUIDSrch&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndUIDSrch&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndUIDSrch</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndPresSrch&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndPresSrch&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndPresSrch</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndDetailSrch&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndDetailSrch&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndDetailSrch</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndPtId&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndPtId&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndPtId</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndKanaName&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndKanaName&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndKanaName</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndPurpose&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndPurpose&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndPurpose</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndLowAge&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndLowAge&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndLowAge</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndHighAge&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndHighAge&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndHighAge</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndLatestDate1&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndLatestDate1&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndLatestDate1</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndLatestDate2&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndLatestDate2&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndLatestDate2</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndLDate1&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndLDate1&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndLDate1</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndLDate2&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndLDate2&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndLDate2</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndSexCombo&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndSexCombo&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndSexCombo</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndCmbByoto&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndCmbByoto&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndCmbByoto</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndCmbSinryou&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndCmbSinryou&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndCmbSinryou</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndCmbIsiryou&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndCmbIsiryou&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndCmbIsiryou</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hwndCmbIsi&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hwndCmbIsi&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hwndCmbIsi</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::m_pTableStaff&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::m_pTableStaff&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::m_pTableStaff</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::m_nTableStaff&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::m_nTableStaff&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::m_nTableStaff</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::m_nTableMsrt&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::m_nTableMsrt&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::m_nTableMsrt</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::m_pTableMrst&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::m_pTableMrst&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::m_pTableMrst</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::mCsvData&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::mCsvData&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::mCsvData</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::hvDrugChioice&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::hvDrugChioice&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::hvDrugChioice</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::patTatData&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::patTatData&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::patTatData</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::patListData&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::patListData&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::patListData</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::m_pszLineBuf&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::m_pszLineBuf&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::m_pszLineBuf</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::m_bRealse&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::m_bRealse&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::m_bRealse</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::m_IsOpen&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::m_IsOpen&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::m_IsOpen</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::m_isAccessible&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::m_isAccessible&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::m_isAccessible</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::nListDataCnt&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::nListDataCnt&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::nListDataCnt</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::nsortMrsaList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::nsortMrsaList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::nsortMrsaList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::iSelectLine&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::iSelectLine&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::iSelectLine</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::sex&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::sex&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::sex</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::patData&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::patData&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::patData</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::patRecNum&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::patRecNum&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::patRecNum</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::patCsvNum&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::patCsvNum&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::patCsvNum</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvC21ResistMRSAList::profDate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvC21ResistMRSAList::profDate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="105"/>
            <symbol>HvC21ResistMRSAList::profDate</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;patID!=NULL&apos; is always true" verbose="Condition &apos;patID!=NULL&apos; is always true" cwe="571">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1232" info="Condition &apos;patID!=NULL&apos; is always true"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;p&apos; is redundant or there is possible null pointer dereference: p." verbose="Either the condition &apos;p&apos; is redundant or there is possible null pointer dereference: p." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" line="2434" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" line="2430" info="Assuming that condition &apos;p&apos; is not redundant"/>
            <symbol>p</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;if(rec)&apos; is redundant or there is possible null pointer dereference: rec." verbose="Either the condition &apos;if(rec)&apos; is redundant or there is possible null pointer dereference: rec." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1902" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1915" info="Assuming that condition &apos;if(rec)&apos; is not redundant"/>
            <symbol>rec</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;NULL!=pszItem&apos; is redundant or there is possible null pointer dereference: pszItem." verbose="Either the condition &apos;NULL!=pszItem&apos; is redundant or there is possible null pointer dereference: pszItem." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1999" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1962" info="Assuming that condition &apos;NULL!=pszItem&apos; is not redundant"/>
            <symbol>pszItem</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" line="73"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" line="76"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" line="86"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" line="931"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" line="1166"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" line="1202"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" line="1324"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" line="1817"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" line="1984"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" line="1986"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="83"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvC41MstMain&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvC41MstMain&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC41MstMain.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC41MstMain.hpp" line="21"/>
            <symbol>HvC41MstMain</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nBeginIndex&apos; can be reduced." verbose="The scope of the variable &apos;nBeginIndex&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\core\DataLoader\HuDataHandler.hpp" line="48"/>
            <symbol>nBeginIndex</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nIndex&apos; can be reduced." verbose="The scope of the variable &apos;nIndex&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\core\DataLoader\HuDataHandler.hpp" line="49"/>
            <symbol>nIndex</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nLastEndIndex&apos; can be reduced." verbose="The scope of the variable &apos;nLastEndIndex&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\core\DataLoader\HuDataHandler.hpp" line="50"/>
            <symbol>nLastEndIndex</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;nBuffLen&apos; shadows outer variable" verbose="Local variable &apos;nBuffLen&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" line="2492" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC22JissiList.cpp" line="2472" info="Shadowed declaration"/>
            <symbol>nBuffLen</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ka_name_r&apos; can be reduced." verbose="The scope of the variable &apos;ka_name_r&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="325"/>
            <symbol>ka_name_r</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;proc21&apos; can be reduced." verbose="The scope of the variable &apos;proc21&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="402"/>
            <symbol>proc21</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;proc22&apos; can be reduced." verbose="The scope of the variable &apos;proc22&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="403"/>
            <symbol>proc22</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;kubun&apos; can be reduced." verbose="The scope of the variable &apos;kubun&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1479"/>
            <symbol>kubun</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;filename&apos; can be reduced." verbose="The scope of the variable &apos;filename&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1485"/>
            <symbol>filename</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;tc21rp&apos; can be reduced." verbose="The scope of the variable &apos;tc21rp&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1627"/>
            <symbol>tc21rp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;vc21ykh&apos; can be reduced." verbose="The scope of the variable &apos;vc21ykh&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1628"/>
            <symbol>vc21ykh</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;proc21&apos; can be reduced." verbose="The scope of the variable &apos;proc21&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1655"/>
            <symbol>proc21</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;proc22&apos; can be reduced." verbose="The scope of the variable &apos;proc22&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1656"/>
            <symbol>proc22</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ndateMax&apos; can be reduced." verbose="The scope of the variable &apos;ndateMax&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1799"/>
            <symbol>ndateMax</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ndateCnt&apos; can be reduced." verbose="The scope of the variable &apos;ndateCnt&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1800"/>
            <symbol>ndateCnt</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1969"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;pos&apos; can be reduced." verbose="The scope of the variable &apos;pos&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1970"/>
            <symbol>pos</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;l&apos; can be reduced." verbose="The scope of the variable &apos;l&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="2009"/>
            <symbol>l</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;no&apos; shadows outer variable" verbose="Local variable &apos;no&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="990" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="980" info="Shadowed declaration"/>
            <symbol>no</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC41MstMain.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC41MstMain.cpp" line="120"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC41MstMain.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC41MstMain.cpp" line="123"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nSel&apos; is assigned a value that is never used." verbose="Variable &apos;nSel&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC41MstMain.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC41MstMain.cpp" line="1520"/>
            <symbol>nSel</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nSel&apos; is assigned a value that is never used." verbose="Variable &apos;nSel&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC41MstMain.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC41MstMain.cpp" line="1586"/>
            <symbol>nSel</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ilowAge&apos; is assigned a value that is never used." verbose="Variable &apos;ilowAge&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="541"/>
            <symbol>ilowAge</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ihighAge&apos; is assigned a value that is never used." verbose="Variable &apos;ihighAge&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="542"/>
            <symbol>ihighAge</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;num_rp&apos; is assigned a value that is never used." verbose="Variable &apos;num_rp&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1669"/>
            <symbol>num_rp</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="1969"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nTani&apos; is assigned a value that is never used." verbose="Variable &apos;nTani&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC21ResistMRSAList.cpp" line="2205"/>
            <symbol>nTani</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nSelectIndex&apos; can be reduced." verbose="The scope of the variable &apos;nSelectIndex&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DrCondition.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DrCondition.cpp" line="109"/>
            <symbol>nSelectIndex</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sBuff&apos; is assigned a value that is never used." verbose="Variable &apos;sBuff&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DrCondition.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DrCondition.cpp" line="235"/>
            <symbol>sBuff</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sDrFlgName&apos; is assigned a value that is never used." verbose="Variable &apos;sDrFlgName&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DrCondition.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DrCondition.cpp" line="236"/>
            <symbol>sDrFlgName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nShuCnt&apos; is assigned a value that is never used." verbose="Variable &apos;nShuCnt&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DrCondition.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DrCondition.cpp" line="240"/>
            <symbol>nShuCnt</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nIndex&apos; is assigned a value that is never used." verbose="Variable &apos;nIndex&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DrCondition.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DrCondition.cpp" line="301"/>
            <symbol>nIndex</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bAddFlg&apos; is assigned a value that is never used." verbose="Variable &apos;bAddFlg&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DrCondition.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DrCondition.cpp" line="302"/>
            <symbol>bAddFlg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bIsChecked&apos; is assigned a value that is never used." verbose="Variable &apos;bIsChecked&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55KaCondition.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55KaCondition.cpp" line="150"/>
            <symbol>bIsChecked</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bIsChecked&apos; is assigned a value that is never used." verbose="Variable &apos;bIsChecked&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55StsCondition.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55StsCondition.cpp" line="202"/>
            <symbol>bIsChecked</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bIsChecked&apos; is assigned a value that is never used." verbose="Variable &apos;bIsChecked&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55StsCondition.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55StsCondition.cpp" line="245"/>
            <symbol>bIsChecked</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00Agree::m_hDoui&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00Agree::m_hDoui&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" line="47"/>
            <symbol>HvD00Agree::m_hDoui</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00Agree::m_hActive&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00Agree::m_hActive&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" line="47"/>
            <symbol>HvD00Agree::m_hActive</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00Agree::m_hDouiPer&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00Agree::m_hDouiPer&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" line="47"/>
            <symbol>HvD00Agree::m_hDouiPer</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00Agree::m_hStart&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00Agree::m_hStart&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" line="47"/>
            <symbol>HvD00Agree::m_hStart</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00Agree::m_hEnd&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00Agree::m_hEnd&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" line="47"/>
            <symbol>HvD00Agree::m_hEnd</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00Agree::m_hNyuin&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00Agree::m_hNyuin&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" line="47"/>
            <symbol>HvD00Agree::m_hNyuin</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00Agree::m_hList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00Agree::m_hList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" line="47"/>
            <symbol>HvD00Agree::m_hList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00Agree::m_hDetail&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00Agree::m_hDetail&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" line="47"/>
            <symbol>HvD00Agree::m_hDetail</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00Agree::m_DouiKanri&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00Agree::m_DouiKanri&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" line="47"/>
            <symbol>HvD00Agree::m_DouiKanri</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;pd&apos; shadows outer variable" verbose="Local variable &apos;pd&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" line="516" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00Agree.cpp" line="503" info="Shadowed declaration"/>
            <symbol>pd</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00AgreeNew::m_pRecordView&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00AgreeNew::m_pRecordView&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" line="61"/>
            <symbol>HvD00AgreeNew::m_pRecordView</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00AgreeNew::m_histPage&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00AgreeNew::m_histPage&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" line="61"/>
            <symbol>HvD00AgreeNew::m_histPage</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00AgreeNew::m_hDoui&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00AgreeNew::m_hDoui&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" line="61"/>
            <symbol>HvD00AgreeNew::m_hDoui</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00AgreeNew::m_hChiken&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00AgreeNew::m_hChiken&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" line="61"/>
            <symbol>HvD00AgreeNew::m_hChiken</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00AgreeNew::m_hStatus&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00AgreeNew::m_hStatus&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" line="61"/>
            <symbol>HvD00AgreeNew::m_hStatus</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00AgreeNew::m_hKa&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00AgreeNew::m_hKa&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" line="61"/>
            <symbol>HvD00AgreeNew::m_hKa</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00AgreeNew::m_hPerson&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00AgreeNew::m_hPerson&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" line="61"/>
            <symbol>HvD00AgreeNew::m_hPerson</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00AgreeNew::m_hGuide&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00AgreeNew::m_hGuide&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" line="61"/>
            <symbol>HvD00AgreeNew::m_hGuide</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00AgreeNew::m_hSiteinasi&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00AgreeNew::m_hSiteinasi&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" line="61"/>
            <symbol>HvD00AgreeNew::m_hSiteinasi</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00AgreeNew::m_hNyuin&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00AgreeNew::m_hNyuin&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" line="61"/>
            <symbol>HvD00AgreeNew::m_hNyuin</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00AgreeNew::m_D00Doui&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00AgreeNew::m_D00Doui&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" line="61"/>
            <symbol>HvD00AgreeNew::m_D00Doui</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;strlen(sbuff)&apos; is less than zero." verbose="The unsigned expression &apos;strlen(sbuff)&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00AgreeNew.cpp" line="403" info="Unsigned less than zero"/>
            <symbol>strlen(sbuff)</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;rec==NULL&apos; is always true" verbose="Condition &apos;rec==NULL&apos; is always true" cwe="571">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="6783" info="Condition &apos;rec==NULL&apos; is always true"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="6755" info="Assignment &apos;rec=NULL&apos;, assigned value is 0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;rec==NULL&apos; is always true" verbose="Condition &apos;rec==NULL&apos; is always true" cwe="571">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="6891" info="Condition &apos;rec==NULL&apos; is always true"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="6866" info="Assignment &apos;rec=NULL&apos;, assigned value is 0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;rec==NULL&apos; is always true" verbose="Condition &apos;rec==NULL&apos; is always true" cwe="571">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="6987" info="Condition &apos;rec==NULL&apos; is always true"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="6959" info="Assignment &apos;rec=NULL&apos;, assigned value is 0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="119"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;l&apos; can be reduced." verbose="The scope of the variable &apos;l&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="1417"/>
            <symbol>l</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;buff&apos; can be reduced." verbose="The scope of the variable &apos;buff&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="1435"/>
            <symbol>buff</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;l&apos; can be reduced." verbose="The scope of the variable &apos;l&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="2629"/>
            <symbol>l</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;buff&apos; can be reduced." verbose="The scope of the variable &apos;buff&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="2688"/>
            <symbol>buff</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;l&apos; can be reduced." verbose="The scope of the variable &apos;l&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="2925"/>
            <symbol>l</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;l&apos; can be reduced." verbose="The scope of the variable &apos;l&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="2962"/>
            <symbol>l</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nNum1&apos; can be reduced." verbose="The scope of the variable &apos;nNum1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="3048"/>
            <symbol>nNum1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nNum2&apos; can be reduced." verbose="The scope of the variable &apos;nNum2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="3049"/>
            <symbol>nNum2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nDiff&apos; can be reduced." verbose="The scope of the variable &apos;nDiff&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="3050"/>
            <symbol>nDiff</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="3617"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nNum&apos; can be reduced." verbose="The scope of the variable &apos;nNum&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="3620"/>
            <symbol>nNum</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="3699"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;j&apos; can be reduced." verbose="The scope of the variable &apos;j&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="3700"/>
            <symbol>j</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nCnt1&apos; can be reduced." verbose="The scope of the variable &apos;nCnt1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="3702"/>
            <symbol>nCnt1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;buff&apos; can be reduced." verbose="The scope of the variable &apos;buff&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="7070"/>
            <symbol>buff</symbol>
        </error>
        <error id="sprintfOverlappingData" severity="error" msg="Undefined behavior: Variable &apos;sText&apos; is used as parameter and destination in sprintf()." verbose="The variable &apos;sText&apos; is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): &quot;If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.&quot;" cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="7746"/>
            <symbol>sText</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00DaikoList::m_hList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00DaikoList::m_hList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00DaikoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00DaikoList.cpp" line="44"/>
            <symbol>HvD00DaikoList::m_hList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00DaikoList::m_hButtonReShow&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00DaikoList::m_hButtonReShow&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00DaikoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00DaikoList.cpp" line="44"/>
            <symbol>HvD00DaikoList::m_hButtonReShow</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00DaikoList::m_hButtonNewRecord&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00DaikoList::m_hButtonNewRecord&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00DaikoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00DaikoList.cpp" line="44"/>
            <symbol>HvD00DaikoList::m_hButtonNewRecord</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00DaikoList::m_hButtonChangeRecord&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00DaikoList::m_hButtonChangeRecord&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00DaikoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00DaikoList.cpp" line="44"/>
            <symbol>HvD00DaikoList::m_hButtonChangeRecord</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00DaikoList::m_hButtonDeleteRecord&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00DaikoList::m_hButtonDeleteRecord&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00DaikoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00DaikoList.cpp" line="44"/>
            <symbol>HvD00DaikoList::m_hButtonDeleteRecord</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00DaikoList::m_hShtype&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00DaikoList::m_hShtype&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00DaikoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00DaikoList.cpp" line="44"/>
            <symbol>HvD00DaikoList::m_hShtype</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00DaikoList::m_hKacd&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00DaikoList::m_hKacd&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00DaikoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00DaikoList.cpp" line="44"/>
            <symbol>HvD00DaikoList::m_hKacd</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00DaikoList::m_hUser&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00DaikoList::m_hUser&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00DaikoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00DaikoList.cpp" line="44"/>
            <symbol>HvD00DaikoList::m_hUser</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="2631"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="2927"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="2963"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="3617"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;j&apos; is assigned a value that is never used." verbose="Variable &apos;j&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="3618"/>
            <symbol>j</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="3699"/>
            <symbol>i</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaiko::m_hStaffList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaiko::m_hStaffList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" line="49"/>
            <symbol>HvD00SetDaiko::m_hStaffList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaiko::m_hMenuList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaiko::m_hMenuList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" line="49"/>
            <symbol>HvD00SetDaiko::m_hMenuList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaiko::m_hShtype&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaiko::m_hShtype&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" line="49"/>
            <symbol>HvD00SetDaiko::m_hShtype</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaiko::m_hKacd&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaiko::m_hKacd&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" line="49"/>
            <symbol>HvD00SetDaiko::m_hKacd</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaiko::m_hStartDate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaiko::m_hStartDate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" line="49"/>
            <symbol>HvD00SetDaiko::m_hStartDate</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaiko::m_hEndDate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaiko::m_hEndDate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" line="49"/>
            <symbol>HvD00SetDaiko::m_hEndDate</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaiko::m_hReason&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaiko::m_hReason&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" line="49"/>
            <symbol>HvD00SetDaiko::m_hReason</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaiko::m_hRegist&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaiko::m_hRegist&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" line="49"/>
            <symbol>HvD00SetDaiko::m_hRegist</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="6387"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;xx_kbn&apos; is assigned a value that is never used." verbose="Variable &apos;xx_kbn&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="6772"/>
            <symbol>xx_kbn</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bReadOnly&apos; is assigned a value that is never used." verbose="Variable &apos;bReadOnly&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="6861"/>
            <symbol>bReadOnly</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;xx_kbn&apos; is assigned a value that is never used." verbose="Variable &apos;xx_kbn&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="6880"/>
            <symbol>xx_kbn</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;xx_kbn&apos; is assigned a value that is never used." verbose="Variable &apos;xx_kbn&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvC55DpcList.cpp" line="6976"/>
            <symbol>xx_kbn</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;index&apos; shadows outer variable" verbose="Local variable &apos;index&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" line="629" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" line="599" info="Shadowed declaration"/>
            <symbol>index</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sIjyo_moto&apos; is assigned a value that is never used." verbose="Variable &apos;sIjyo_moto&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" line="677"/>
            <symbol>sIjyo_moto</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sIjyo_saki&apos; is assigned a value that is never used." verbose="Variable &apos;sIjyo_saki&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaiko.cpp" line="678"/>
            <symbol>sIjyo_saki</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hStaffList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hStaffList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hStaffList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hStaffList2&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hStaffList2&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hStaffList2</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hStaffResult1&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hStaffResult1&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hStaffResult1</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hStaffResult2&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hStaffResult2&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hStaffResult2</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hMenuList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hMenuList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hMenuList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hShtype&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hShtype&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hShtype</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hShtype2&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hShtype2&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hShtype2</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hKacd&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hKacd&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hKacd</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hKacd2&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hKacd2&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hKacd2</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hStartDate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hStartDate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hStartDate</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hEndDate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hEndDate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hEndDate</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hReason&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hReason&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hReason</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hRegist&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hRegist&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hRegist</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hClear&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hClear&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hClear</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hClear2&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hClear2&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hClear2</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hSelStaff&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hSelStaff&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hSelStaff</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hSelStaff2&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hSelStaff2&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hSelStaff2</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hCheckAll&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hCheckAll&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hCheckAll</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_hCheckAll2&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_hCheckAll2&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_hCheckAll2</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD00SetDaikoSuper::m_bDirty&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD00SetDaikoSuper::m_bDirty&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="38"/>
            <symbol>HvD00SetDaikoSuper::m_bDirty</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;pDaiko!=NULL&apos; is redundant or there is possible null pointer dereference: pDaiko." verbose="Either the condition &apos;pDaiko!=NULL&apos; is redundant or there is possible null pointer dereference: pDaiko." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1070" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1082" info="Assuming that condition &apos;pDaiko!=NULL&apos; is not redundant"/>
            <symbol>pDaiko</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;pStaffSaki!=NULL&apos; is redundant or there is possible null pointer dereference: pStaffSaki." verbose="Either the condition &apos;pStaffSaki!=NULL&apos; is redundant or there is possible null pointer dereference: pStaffSaki." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1070" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1090" info="Assuming that condition &apos;pStaffSaki!=NULL&apos; is not redundant"/>
            <symbol>pStaffSaki</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;pDaiko!=NULL&apos; is redundant or there is possible null pointer dereference: pDaiko." verbose="Either the condition &apos;pDaiko!=NULL&apos; is redundant or there is possible null pointer dereference: pDaiko." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1071" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1082" info="Assuming that condition &apos;pDaiko!=NULL&apos; is not redundant"/>
            <symbol>pDaiko</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;pStaffSaki!=NULL&apos; is redundant or there is possible null pointer dereference: pStaffSaki." verbose="Either the condition &apos;pStaffSaki!=NULL&apos; is redundant or there is possible null pointer dereference: pStaffSaki." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1071" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1090" info="Assuming that condition &apos;pStaffSaki!=NULL&apos; is not redundant"/>
            <symbol>pStaffSaki</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;pDaiko!=NULL&apos; is redundant or there is possible null pointer dereference: pDaiko." verbose="Either the condition &apos;pDaiko!=NULL&apos; is redundant or there is possible null pointer dereference: pDaiko." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1072" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1082" info="Assuming that condition &apos;pDaiko!=NULL&apos; is not redundant"/>
            <symbol>pDaiko</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;pStaffSaki!=NULL&apos; is redundant or there is possible null pointer dereference: pStaffSaki." verbose="Either the condition &apos;pStaffSaki!=NULL&apos; is redundant or there is possible null pointer dereference: pStaffSaki." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1072" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1090" info="Assuming that condition &apos;pStaffSaki!=NULL&apos; is not redundant"/>
            <symbol>pStaffSaki</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;pStaffMoto!=NULL&apos; is redundant or there is possible null pointer dereference: pStaffMoto." verbose="Either the condition &apos;pStaffMoto!=NULL&apos; is redundant or there is possible null pointer dereference: pStaffMoto." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1077" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1086" info="Assuming that condition &apos;pStaffMoto!=NULL&apos; is not redundant"/>
            <symbol>pStaffMoto</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;pStaffSaki!=NULL&apos; is redundant or there is possible null pointer dereference: pStaffSaki." verbose="Either the condition &apos;pStaffSaki!=NULL&apos; is redundant or there is possible null pointer dereference: pStaffSaki." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1078" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1090" info="Assuming that condition &apos;pStaffSaki!=NULL&apos; is not redundant"/>
            <symbol>pStaffSaki</symbol>
        </error>
        <error id="pointerSize" severity="warning" msg="Size of pointer &apos;pDaiko&apos; used instead of size of its data." verbose="Size of pointer &apos;pDaiko&apos; used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write &apos;sizeof(*pDaiko)&apos;." cwe="467">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1150"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pStaff&apos; is assigned a value that is never used." verbose="Variable &apos;pStaff&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1351"/>
            <symbol>pStaff</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pStaff&apos; is assigned a value that is never used." verbose="Variable &apos;pStaff&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD00SetDaikoSuper.cpp" line="1381"/>
            <symbol>pStaff</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvD05DRGRe&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvD05DRGRe&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD05DRGRe.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD05DRGRe.hpp" line="22"/>
            <symbol>HvD05DRGRe</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;char *&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;char *&apos;." cwe="686">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD05DRGRe.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD05DRGRe.cpp" line="312"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD05DRGRe.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD05DRGRe.cpp" line="55"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD05DRGRe.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD05DRGRe.cpp" line="101"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD05DRGRe.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD05DRGRe.cpp" line="104"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD12HISUM::hwndList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD12HISUM::hwndList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" line="80"/>
            <symbol>HvD12HISUM::hwndList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD12HISUM::hwndKa&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD12HISUM::hwndKa&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" line="80"/>
            <symbol>HvD12HISUM::hwndKa</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD12HISUM::hwndKbn&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD12HISUM::hwndKbn&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" line="80"/>
            <symbol>HvD12HISUM::hwndKbn</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD12HISUM::bMyDepOnly&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD12HISUM::bMyDepOnly&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" line="80"/>
            <symbol>HvD12HISUM::bMyDepOnly</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD12HISUM::bFutureOnly&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD12HISUM::bFutureOnly&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" line="80"/>
            <symbol>HvD12HISUM::bFutureOnly</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD12HISUM::m_bPayCheckMode&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD12HISUM::m_bPayCheckMode&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" line="80"/>
            <symbol>HvD12HISUM::m_bPayCheckMode</symbol>
        </error>
        <error id="redundantCondition" severity="style" msg="Redundant condition: If &apos;diffYotei &lt;= 0&apos;, the comparison &apos;diffYotei &lt;= 10&apos; is always true." verbose="Redundant condition: If &apos;diffYotei &lt;= 0&apos;, the comparison &apos;diffYotei &lt;= 10&apos; is always true." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" line="1395"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" line="76"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;idx&apos; can be reduced." verbose="The scope of the variable &apos;idx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" line="532"/>
            <symbol>idx</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;nIndex&apos; shadows outer variable" verbose="Local variable &apos;nIndex&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" line="1065" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" line="1054" info="Shadowed declaration"/>
            <symbol>nIndex</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;nIndex&apos; shadows outer variable" verbose="Local variable &apos;nIndex&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" line="1074" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" line="1054" info="Shadowed declaration"/>
            <symbol>nIndex</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pCode&apos; is assigned a value that is never used." verbose="Variable &apos;pCode&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" line="1062"/>
            <symbol>pCode</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pCode&apos; is assigned a value that is never used." verbose="Variable &apos;pCode&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" line="1072"/>
            <symbol>pCode</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;lrc&apos; is assigned a value that is never used." verbose="Variable &apos;lrc&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD12HISUM.cpp" line="1383"/>
            <symbol>lrc</symbol>
        </error>
        <error id="ignoredReturnValue" severity="warning" msg="Return value of function CreateWindow() is not used." verbose="Return value of function CreateWindow() is not used." cwe="252">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="815"/>
            <symbol>CreateWindow</symbol>
        </error>
        <error id="ignoredReturnValue" severity="warning" msg="Return value of function CreateWindow() is not used." verbose="Return value of function CreateWindow() is not used." cwe="252">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="867"/>
            <symbol>CreateWindow</symbol>
        </error>
        <error id="ignoredReturnValue" severity="warning" msg="Return value of function CreateWindow() is not used." verbose="Return value of function CreateWindow() is not used." cwe="252">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="870"/>
            <symbol>CreateWindow</symbol>
        </error>
        <error id="ignoredReturnValue" severity="warning" msg="Return value of function CreateWindow() is not used." verbose="Return value of function CreateWindow() is not used." cwe="252">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="873"/>
            <symbol>CreateWindow</symbol>
        </error>
        <error id="ignoredReturnValue" severity="warning" msg="Return value of function CreateWindow() is not used." verbose="Return value of function CreateWindow() is not used." cwe="252">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="876"/>
            <symbol>CreateWindow</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD13PROFL::problemList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD13PROFL::problemList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="112"/>
            <symbol>HvD13PROFL::problemList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD13PROFL::bKaOnly&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD13PROFL::bKaOnly&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="112"/>
            <symbol>HvD13PROFL::bKaOnly</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD13PROFL::bActiveOnly&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD13PROFL::bActiveOnly&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="112"/>
            <symbol>HvD13PROFL::bActiveOnly</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD13PROFL::bDispName&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD13PROFL::bDispName&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="112"/>
            <symbol>HvD13PROFL::bDispName</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD13PROFL::bUseKyugo&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD13PROFL::bUseKyugo&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="112"/>
            <symbol>HvD13PROFL::bUseKyugo</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD13PROFL::pProfile&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD13PROFL::pProfile&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="112"/>
            <symbol>HvD13PROFL::pProfile</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD13PROFL::pData&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD13PROFL::pData&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="112"/>
            <symbol>HvD13PROFL::pData</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD13PROFL::bDaModified&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD13PROFL::bDaModified&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="112"/>
            <symbol>HvD13PROFL::bDaModified</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD13PROFL::bFaModified&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD13PROFL::bFaModified&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="112"/>
            <symbol>HvD13PROFL::bFaModified</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD13PROFL::bIdoModified&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD13PROFL::bIdoModified&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="112"/>
            <symbol>HvD13PROFL::bIdoModified</symbol>
        </error>
        <error id="nullPointer" severity="warning" msg="Possible null pointer dereference: array" verbose="Possible null pointer dereference: array" cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="720" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="708" info="Assignment &apos;array=NULL&apos;, assigned value is 0"/>
            <symbol>array</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD21StopPtSelPage::hwndList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD21StopPtSelPage::hwndList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD21StopPtSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD21StopPtSelPage.cpp" line="138"/>
            <symbol>HvD21StopPtSelPage::hwndList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD21StopPtSelPage::hwndOpenKarte&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD21StopPtSelPage::hwndOpenKarte&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD21StopPtSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD21StopPtSelPage.cpp" line="138"/>
            <symbol>HvD21StopPtSelPage::hwndOpenKarte</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD21StopPtSelPage::selected&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD21StopPtSelPage::selected&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD21StopPtSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD21StopPtSelPage.cpp" line="138"/>
            <symbol>HvD21StopPtSelPage::selected</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD21StopPtSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD21StopPtSelPage.cpp" line="43"/>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;no&apos; shadows outer variable" verbose="Local variable &apos;no&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD21StopPtSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD21StopPtSelPage.cpp" line="452" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD21StopPtSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD21StopPtSelPage.cpp" line="442" info="Shadowed declaration"/>
            <symbol>no</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;cyumst&apos; shadows outer variable" verbose="Local variable &apos;cyumst&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="1563" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="1519" info="Shadowed declaration"/>
            <symbol>cyumst</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;num&apos; shadows outer variable" verbose="Local variable &apos;num&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="1564" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="1558" info="Shadowed declaration"/>
            <symbol>num</symbol>
        </error>
        <error id="sizeofDivisionMemfunc" severity="warning" msg="Division by result of sizeof(). memset() expects a size in bytes, did you intend to multiply instead?" verbose="Division by result of sizeof(). memset() expects a size in bytes, did you intend to multiply instead?" cwe="682">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="241"/>
        </error>
        <error id="sizeofDivisionMemfunc" severity="warning" msg="Division by result of sizeof(). memset() expects a size in bytes, did you intend to multiply instead?" verbose="Division by result of sizeof(). memset() expects a size in bytes, did you intend to multiply instead?" cwe="682">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="242"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;height&apos; is assigned a value that is never used." verbose="Variable &apos;height&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="767"/>
            <symbol>height</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;weight&apos; is assigned a value that is never used." verbose="Variable &apos;weight&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="770"/>
            <symbol>weight</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;no&apos; is assigned a value that is never used." verbose="Variable &apos;no&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD13PROFL.cpp" line="1596"/>
            <symbol>no</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD30Kansa.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD30Kansa.cpp" line="176"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD30Kansa.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD30Kansa.cpp" line="363"/>
            <symbol>i</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD31KKALIST::m_pTcommstData&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD31KKALIST::m_pTcommstData&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" line="42"/>
            <symbol>HvD31KKALIST::m_pTcommstData</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD31KKALIST::m_nTcommstNum&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD31KKALIST::m_nTcommstNum&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" line="42"/>
            <symbol>HvD31KKALIST::m_nTcommstNum</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD31KKALIST::m_pTd31smryArray&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD31KKALIST::m_pTd31smryArray&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" line="42"/>
            <symbol>HvD31KKALIST::m_pTd31smryArray</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD31KKALIST::m_nTd31Num&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD31KKALIST::m_nTd31Num&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" line="42"/>
            <symbol>HvD31KKALIST::m_nTd31Num</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD31KKALIST::m_SmryCol&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD31KKALIST::m_SmryCol&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" line="42"/>
            <symbol>HvD31KKALIST::m_SmryCol</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" line="275"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" line="1185"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nShidoCount&apos; can be reduced." verbose="The scope of the variable &apos;nShidoCount&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" line="1007"/>
            <symbol>nShidoCount</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;pArrayOut&apos; can be reduced." verbose="The scope of the variable &apos;pArrayOut&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" line="1317"/>
            <symbol>pArrayOut</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nSybtFlg&apos; is assigned a value that is never used." verbose="Variable &apos;nSybtFlg&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" line="400"/>
            <symbol>nSybtFlg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;res&apos; is assigned a value that is never used." verbose="Variable &apos;res&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" line="421"/>
            <symbol>res</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bret&apos; is assigned a value that is never used." verbose="Variable &apos;bret&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALIST.cpp" line="1187"/>
            <symbol>bret</symbol>
        </error>
        <error id="invalidFunctionArg" severity="error" msg="Invalid strchr() argument nr 2. The value is 4294967196 but the valid values are &apos;0:255&apos;." verbose="Invalid strchr() argument nr 2. The value is 4294967196 but the valid values are &apos;0:255&apos;." cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="491" info="Invalid argument"/>
            <symbol>strchr</symbol>
        </error>
        <error id="invalidFunctionArg" severity="error" msg="Invalid strchr() argument nr 2. The value is 4294967195 but the valid values are &apos;0:255&apos;." verbose="Invalid strchr() argument nr 2. The value is 4294967195 but the valid values are &apos;0:255&apos;." cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="492" info="Invalid argument"/>
            <symbol>strchr</symbol>
        </error>
        <error id="invalidFunctionArg" severity="error" msg="Invalid strchr() argument nr 2. The value is 4294967197 but the valid values are &apos;0:255&apos;." verbose="Invalid strchr() argument nr 2. The value is 4294967197 but the valid values are &apos;0:255&apos;." cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="493" info="Invalid argument"/>
            <symbol>strchr</symbol>
        </error>
        <error id="invalidFunctionArg" severity="error" msg="Invalid strchr() argument nr 2. The value is 4294967196 but the valid values are &apos;0:255&apos;." verbose="Invalid strchr() argument nr 2. The value is 4294967196 but the valid values are &apos;0:255&apos;." cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="543" info="Invalid argument"/>
            <symbol>strchr</symbol>
        </error>
        <error id="invalidFunctionArg" severity="error" msg="Invalid strchr() argument nr 2. The value is 4294967195 but the valid values are &apos;0:255&apos;." verbose="Invalid strchr() argument nr 2. The value is 4294967195 but the valid values are &apos;0:255&apos;." cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="544" info="Invalid argument"/>
            <symbol>strchr</symbol>
        </error>
        <error id="invalidFunctionArg" severity="error" msg="Invalid strchr() argument nr 2. The value is 4294967197 but the valid values are &apos;0:255&apos;." verbose="Invalid strchr() argument nr 2. The value is 4294967197 but the valid values are &apos;0:255&apos;." cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="545" info="Invalid argument"/>
            <symbol>strchr</symbol>
        </error>
        <error id="invalidFunctionArg" severity="error" msg="Invalid strchr() argument nr 2. The value is 4294967196 but the valid values are &apos;0:255&apos;." verbose="Invalid strchr() argument nr 2. The value is 4294967196 but the valid values are &apos;0:255&apos;." cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="601" info="Invalid argument"/>
            <symbol>strchr</symbol>
        </error>
        <error id="invalidFunctionArg" severity="error" msg="Invalid strchr() argument nr 2. The value is 4294967195 but the valid values are &apos;0:255&apos;." verbose="Invalid strchr() argument nr 2. The value is 4294967195 but the valid values are &apos;0:255&apos;." cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="602" info="Invalid argument"/>
            <symbol>strchr</symbol>
        </error>
        <error id="invalidFunctionArg" severity="error" msg="Invalid strchr() argument nr 2. The value is 4294967197 but the valid values are &apos;0:255&apos;." verbose="Invalid strchr() argument nr 2. The value is 4294967197 but the valid values are &apos;0:255&apos;." cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="603" info="Invalid argument"/>
            <symbol>strchr</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvD91IraiSel&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvD91IraiSel&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91IraiSel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91IraiSel.hpp" line="29"/>
            <symbol>HvD91IraiSel</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;hwnd!=NULL&apos; is redundant or there is possible null pointer dereference: hwnd." verbose="Either the condition &apos;hwnd!=NULL&apos; is redundant or there is possible null pointer dereference: hwnd." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="867" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="868" info="Assuming that condition &apos;hwnd!=NULL&apos; is not redundant"/>
            <symbol>hwnd</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;pd&apos; is redundant or there is possible null pointer dereference: pd." verbose="Either the condition &apos;pd&apos; is redundant or there is possible null pointer dereference: pd." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91IraiSel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91IraiSel.cpp" line="918" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91IraiSel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91IraiSel.cpp" line="914" info="Assuming that condition &apos;pd&apos; is not redundant"/>
            <symbol>pd</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="152"/>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;index&apos; shadows outer variable" verbose="Local variable &apos;index&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91IraiSel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91IraiSel.cpp" line="1045" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91IraiSel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91IraiSel.cpp" line="1039" info="Shadowed declaration"/>
            <symbol>index</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;strTmp&apos; can be reduced." verbose="The scope of the variable &apos;strTmp&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="757"/>
            <symbol>strTmp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;res&apos; can be reduced." verbose="The scope of the variable &apos;res&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="994"/>
            <symbol>res</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;num&apos; is assigned a value that is never used." verbose="Variable &apos;num&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91IraiSel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91IraiSel.cpp" line="1428"/>
            <symbol>num</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rc&apos; is assigned a value that is never used." verbose="Variable &apos;rc&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="244"/>
            <symbol>rc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bOpen&apos; is assigned a value that is never used." verbose="Variable &apos;bOpen&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="745"/>
            <symbol>bOpen</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bIsOrder&apos; is assigned a value that is never used." verbose="Variable &apos;bIsOrder&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="746"/>
            <symbol>bIsOrder</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;res&apos; is assigned a value that is never used." verbose="Variable &apos;res&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="994"/>
            <symbol>res</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rc&apos; is assigned a value that is never used." verbose="Variable &apos;rc&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="1002"/>
            <symbol>rc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;strKmk&apos; is assigned a value that is never used." verbose="Variable &apos;strKmk&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="1003"/>
            <symbol>strKmk</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;kmk_cd&apos; is assigned a value that is never used." verbose="Variable &apos;kmk_cd&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD31KKALISTKCM.cpp" line="1364"/>
            <symbol>kmk_cd</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91MessageBox::m_hCdateStartdate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91MessageBox::m_hCdateStartdate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" line="112"/>
            <symbol>HvD91MessageBox::m_hCdateStartdate</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91MessageBox::m_hCdateEnddate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91MessageBox::m_hCdateEnddate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" line="112"/>
            <symbol>HvD91MessageBox::m_hCdateEnddate</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91MessageBox::m_hChkKigennasi&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91MessageBox::m_hChkKigennasi&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" line="112"/>
            <symbol>HvD91MessageBox::m_hChkKigennasi</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91Ptmsg::m_hLabelJuyo&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91Ptmsg::m_hLabelJuyo&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91Ptmsg.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91Ptmsg.cpp" line="135"/>
            <symbol>HvD91Ptmsg::m_hLabelJuyo</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91MessageBox::m_hChkTaiinbimade&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91MessageBox::m_hChkTaiinbimade&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" line="112"/>
            <symbol>HvD91MessageBox::m_hChkTaiinbimade</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91MessageBox::m_hChkTorokusya&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91MessageBox::m_hChkTorokusya&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" line="112"/>
            <symbol>HvD91MessageBox::m_hChkTorokusya</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91MessageBox::m_bMode&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91MessageBox::m_bMode&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" line="112"/>
            <symbol>HvD91MessageBox::m_bMode</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91MessageBox::m_hChkMoto&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91MessageBox::m_hChkMoto&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" line="112"/>
            <symbol>HvD91MessageBox::m_hChkMoto</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91MessageBox::m_pRecord&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91MessageBox::m_pRecord&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" line="112"/>
            <symbol>HvD91MessageBox::m_pRecord</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" line="1238"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" line="1480"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" line="1482"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;pTmsgbox&apos; can be reduced." verbose="The scope of the variable &apos;pTmsgbox&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" line="1328"/>
            <symbol>pTmsgbox</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;bNoRead&apos; can be reduced." verbose="The scope of the variable &apos;bNoRead&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" line="1330"/>
            <symbol>bNoRead</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pUser&apos; is assigned a value that is never used." verbose="Variable &apos;pUser&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91MessageBox.cpp" line="822"/>
            <symbol>pUser</symbol>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="5091" info="Second condition"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="5080" info="First condition"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="177"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="181"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="5413"/>
        </error>
        <error id="duplicateBreak" severity="style" msg="Consecutive return, break, continue, goto or throw statements are unnecessary." verbose="Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed." cwe="561">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="692"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;col&apos; can be reduced." verbose="The scope of the variable &apos;col&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="1416"/>
            <symbol>col</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;col&apos; can be reduced." verbose="The scope of the variable &apos;col&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="1591"/>
            <symbol>col</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;col&apos; can be reduced." verbose="The scope of the variable &apos;col&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="2450"/>
            <symbol>col</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;col&apos; can be reduced." verbose="The scope of the variable &apos;col&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="2537"/>
            <symbol>col</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;col&apos; can be reduced." verbose="The scope of the variable &apos;col&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="2630"/>
            <symbol>col</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;col&apos; can be reduced." verbose="The scope of the variable &apos;col&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="2881"/>
            <symbol>col</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;col&apos; can be reduced." verbose="The scope of the variable &apos;col&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="3020"/>
            <symbol>col</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;col&apos; can be reduced." verbose="The scope of the variable &apos;col&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="3071"/>
            <symbol>col</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;col&apos; can be reduced." verbose="The scope of the variable &apos;col&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="3132"/>
            <symbol>col</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;col&apos; can be reduced." verbose="The scope of the variable &apos;col&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="3588"/>
            <symbol>col</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sBuf&apos; can be reduced." verbose="The scope of the variable &apos;sBuf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="4389"/>
            <symbol>sBuf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;col&apos; can be reduced." verbose="The scope of the variable &apos;col&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="5046"/>
            <symbol>col</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;col&apos; can be reduced." verbose="The scope of the variable &apos;col&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="6785"/>
            <symbol>col</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;nHeight&apos; is less than zero." verbose="The unsigned expression &apos;nHeight&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="3971" info="Unsigned less than zero"/>
            <symbol>nHeight</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;col&apos; shadows outer variable" verbose="Local variable &apos;col&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="563" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="558" info="Shadowed declaration"/>
            <symbol>col</symbol>
        </error>
        <error id="sprintfOverlappingData" severity="error" msg="Undefined behavior: Variable &apos;sBuf&apos; is used as parameter and destination in sprintf()." verbose="The variable &apos;sBuf&apos; is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): &quot;If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.&quot;" cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="3226"/>
            <symbol>sBuf</symbol>
        </error>
        <error id="sprintfOverlappingData" severity="error" msg="Undefined behavior: Variable &apos;sBuf&apos; is used as parameter and destination in sprintf()." verbose="The variable &apos;sBuf&apos; is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): &quot;If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.&quot;" cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="3302"/>
            <symbol>sBuf</symbol>
        </error>
        <error id="sprintfOverlappingData" severity="error" msg="Undefined behavior: Variable &apos;sBuf&apos; is used as parameter and destination in sprintf()." verbose="The variable &apos;sBuf&apos; is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): &quot;If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.&quot;" cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="3374"/>
            <symbol>sBuf</symbol>
        </error>
        <error id="sprintfOverlappingData" severity="error" msg="Undefined behavior: Variable &apos;sBuf&apos; is used as parameter and destination in sprintf()." verbose="The variable &apos;sBuf&apos; is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): &quot;If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.&quot;" cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="3470"/>
            <symbol>sBuf</symbol>
        </error>
        <error id="sprintfOverlappingData" severity="error" msg="Undefined behavior: Variable &apos;sBuf&apos; is used as parameter and destination in sprintf()." verbose="The variable &apos;sBuf&apos; is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): &quot;If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.&quot;" cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="3575"/>
            <symbol>sBuf</symbol>
        </error>
        <error id="sprintfOverlappingData" severity="error" msg="Undefined behavior: Variable &apos;sBuf&apos; is used as parameter and destination in sprintf()." verbose="The variable &apos;sBuf&apos; is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): &quot;If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.&quot;" cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="5697"/>
            <symbol>sBuf</symbol>
        </error>
        <error id="sprintfOverlappingData" severity="error" msg="Undefined behavior: Variable &apos;sBuf&apos; is used as parameter and destination in sprintf()." verbose="The variable &apos;sBuf&apos; is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): &quot;If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.&quot;" cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="6971"/>
            <symbol>sBuf</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoDetail::m_pMsgTitle&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoDetail::m_pMsgTitle&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoDetail.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoDetail.cpp" line="70"/>
            <symbol>HvD91ToDoDetail::m_pMsgTitle</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoDetail::m_pMsgText&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoDetail::m_pMsgText&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoDetail.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoDetail.cpp" line="70"/>
            <symbol>HvD91ToDoDetail::m_pMsgText</symbol>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoDetail.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoDetail.cpp" line="1061" info="Second condition"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoDetail.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoDetail.cpp" line="1057" info="First condition"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;col&apos; is assigned a value that is never used." verbose="Variable &apos;col&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="558"/>
            <symbol>col</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bIraiUke&apos; is assigned a value that is never used." verbose="Variable &apos;bIraiUke&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoDetail.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoDetail.cpp" line="1203"/>
            <symbol>bIraiUke</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bIraiMoto&apos; is assigned a value that is never used." verbose="Variable &apos;bIraiMoto&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoDetail.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoDetail.cpp" line="1204"/>
            <symbol>bIraiMoto</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nPos&apos; is assigned a value that is never used." verbose="Variable &apos;nPos&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoDetail.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoDetail.cpp" line="1606"/>
            <symbol>nPos</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoForward::m_pMsgTitle&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoForward::m_pMsgTitle&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoForward.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoForward.cpp" line="60"/>
            <symbol>HvD91ToDoForward::m_pMsgTitle</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoForward::m_pMsgText&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoForward::m_pMsgText&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoForward.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoForward.cpp" line="60"/>
            <symbol>HvD91ToDoForward::m_pMsgText</symbol>
        </error>
        <error id="resourceLeak" severity="error" msg="Resource leak: hFont" verbose="Resource leak: hFont" cwe="775">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoForward.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoForward.cpp" line="370"/>
            <symbol>hFont</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;step&apos; can be reduced." verbose="The scope of the variable &apos;step&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoForward.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoForward.cpp" line="1109"/>
            <symbol>step</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;nBuffLen&apos; shadows outer variable" verbose="Local variable &apos;nBuffLen&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoForward.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoForward.cpp" line="905" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoForward.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoForward.cpp" line="885" info="Shadowed declaration"/>
            <symbol>nBuffLen</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bRtn&apos; is assigned a value that is never used." verbose="Variable &apos;bRtn&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoForward.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoForward.cpp" line="396"/>
            <symbol>bRtn</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nIdx&apos; is assigned a value that is never used." verbose="Variable &apos;nIdx&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="1983"/>
            <symbol>nIdx</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;width&apos; is assigned a value that is never used." verbose="Variable &apos;width&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="1984"/>
            <symbol>width</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nIdx&apos; is assigned a value that is never used." verbose="Variable &apos;nIdx&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="2166"/>
            <symbol>nIdx</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;width&apos; is assigned a value that is never used." verbose="Variable &apos;width&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="2167"/>
            <symbol>width</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pProfile&apos; is assigned a value that is never used." verbose="Variable &apos;pProfile&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="2272"/>
            <symbol>pProfile</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sTitle&apos; is assigned a value that is never used." verbose="Variable &apos;sTitle&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="2347"/>
            <symbol>sTitle</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;j&apos; is assigned a value that is never used." verbose="Variable &apos;j&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="2475"/>
            <symbol>j</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoEntry::m_sKigenDate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoEntry::m_sKigenDate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="101"/>
            <symbol>HvD91ToDoEntry::m_sKigenDate</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoEntry::m_sKeikokuDate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoEntry::m_sKeikokuDate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="101"/>
            <symbol>HvD91ToDoEntry::m_sKeikokuDate</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoEntry::m_sSybtData&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoEntry::m_sSybtData&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="101"/>
            <symbol>HvD91ToDoEntry::m_sSybtData</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;j&apos; is assigned a value that is never used." verbose="Variable &apos;j&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="2563"/>
            <symbol>j</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nHistoryCnt&apos; is assigned a value that is never used." verbose="Variable &apos;nHistoryCnt&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="2656"/>
            <symbol>nHistoryCnt</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;j&apos; is assigned a value that is never used." verbose="Variable &apos;j&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="2658"/>
            <symbol>j</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="63"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;bRet&apos; can be reduced." verbose="The scope of the variable &apos;bRet&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="970"/>
            <symbol>bRet</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;bRet&apos; can be reduced." verbose="The scope of the variable &apos;bRet&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="1017"/>
            <symbol>bRet</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iWeek&apos; can be reduced." verbose="The scope of the variable &apos;iWeek&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="2099"/>
            <symbol>iWeek</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;step&apos; can be reduced." verbose="The scope of the variable &apos;step&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="2315"/>
            <symbol>step</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;rToDay&apos; shadows outer variable" verbose="Local variable &apos;rToDay&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="969" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="823" info="Shadowed declaration"/>
            <symbol>rToDay</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;bRet&apos; shadows outer variable" verbose="Local variable &apos;bRet&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="970" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="824" info="Shadowed declaration"/>
            <symbol>bRet</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;rToDay&apos; shadows outer variable" verbose="Local variable &apos;rToDay&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="1016" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="823" info="Shadowed declaration"/>
            <symbol>rToDay</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;bRet&apos; shadows outer variable" verbose="Local variable &apos;bRet&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="1017" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="824" info="Shadowed declaration"/>
            <symbol>bRet</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;nBuffLen&apos; shadows outer variable" verbose="Local variable &apos;nBuffLen&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="1386" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="1366" info="Shadowed declaration"/>
            <symbol>nBuffLen</symbol>
        </error>
        <error id="pointerSize" severity="warning" msg="Size of pointer &apos;sPtID&apos; used instead of size of its data." verbose="Size of pointer &apos;sPtID&apos; used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write &apos;sizeof(*sPtID)&apos;." cwe="467">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="1966"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bRet&apos; is assigned a value that is never used." verbose="Variable &apos;bRet&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="618"/>
            <symbol>bRet</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bRet&apos; is assigned a value that is never used." verbose="Variable &apos;bRet&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="631"/>
            <symbol>bRet</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nFamilyCnt&apos; is assigned a value that is never used." verbose="Variable &apos;nFamilyCnt&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="2906"/>
            <symbol>nFamilyCnt</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;j&apos; is assigned a value that is never used." verbose="Variable &apos;j&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="2909"/>
            <symbol>j</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bRet&apos; is assigned a value that is never used." verbose="Variable &apos;bRet&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="983"/>
            <symbol>bRet</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bRet&apos; is assigned a value that is never used." verbose="Variable &apos;bRet&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="994"/>
            <symbol>bRet</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bRet&apos; is assigned a value that is never used." verbose="Variable &apos;bRet&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="1117"/>
            <symbol>bRet</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bRet&apos; is assigned a value that is never used." verbose="Variable &apos;bRet&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="1893"/>
            <symbol>bRet</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nNotDisp&apos; is assigned a value that is never used." verbose="Variable &apos;nNotDisp&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoEntry.cpp" line="1992"/>
            <symbol>nNotDisp</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;hText&apos; is assigned a value that is never used." verbose="Variable &apos;hText&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="4481"/>
            <symbol>hText</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sTitle&apos; is assigned a value that is never used." verbose="Variable &apos;sTitle&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="4654"/>
            <symbol>sTitle</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nIdx&apos; is assigned a value that is never used." verbose="Variable &apos;nIdx&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="4938"/>
            <symbol>nIdx</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;width&apos; is assigned a value that is never used." verbose="Variable &apos;width&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="4939"/>
            <symbol>width</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bSingle&apos; is assigned a value that is never used." verbose="Variable &apos;bSingle&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="5335"/>
            <symbol>bSingle</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;col&apos; is assigned a value that is never used." verbose="Variable &apos;col&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD83CisClipBoard.cpp" line="6785"/>
            <symbol>col</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoPanel::m_bShowByEMR&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoPanel::m_bShowByEMR&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoPanel.cpp" line="51"/>
            <symbol>HvD91ToDoPanel::m_bShowByEMR</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoPanel::m_hwnd&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoPanel::m_hwnd&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoPanel.cpp" line="51"/>
            <symbol>HvD91ToDoPanel::m_hwnd</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;no&apos; shadows outer variable" verbose="Local variable &apos;no&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoPanel.cpp" line="527" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoPanel.cpp" line="518" info="Shadowed declaration"/>
            <symbol>no</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pVd91msg&apos; is assigned a value that is never used." verbose="Variable &apos;pVd91msg&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoPanel.cpp" line="345"/>
            <symbol>pVd91msg</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_hFont&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_hFont&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_hFont</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_hSplit1&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_hSplit1&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_hSplit1</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_hSplit2&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_hSplit2&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_hSplit2</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_hChkMoto&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_hChkMoto&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_hChkMoto</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_pTeamCd&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_pTeamCd&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_pTeamCd</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_sNowDate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_sNowDate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_sNowDate</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_sNowTime&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_sNowTime&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_sNowTime</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_nIdToDoList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_nIdToDoList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_nIdToDoList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_nIdAdd&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_nIdAdd&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_nIdAdd</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_nIdRefer&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_nIdRefer&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_nIdRefer</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_nIdTransfer&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_nIdTransfer&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_nIdTransfer</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_nIdStop&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_nIdStop&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_nIdStop</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_nIdDelete&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_nIdDelete&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_nIdDelete</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_nIdKojinRdo&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_nIdKojinRdo&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_nIdKojinRdo</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_nIdTeamRdo&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_nIdTeamRdo&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_nIdTeamRdo</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_nIdAllRdo&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_nIdAllRdo&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_nIdAllRdo</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_nIdTeamCmb&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_nIdTeamCmb&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_nIdTeamCmb</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_nIdMiukeChk&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_nIdMiukeChk&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_nIdMiukeChk</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_nIdUkeChk&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_nIdUkeChk&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_nIdUkeChk</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_nIdFutureChk&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_nIdFutureChk&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_nIdFutureChk</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_nIdStopChk&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_nIdStopChk&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_nIdStopChk</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_nIdMotoChk&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_nIdMotoChk&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_nIdMotoChk</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvD91ToDoList::m_bNeedRefresh&apos; is not initialized in the constructor." verbose="Member variable &apos;HvD91ToDoList::m_bNeedRefresh&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="96"/>
            <symbol>HvD91ToDoList::m_bNeedRefresh</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;m_cond&apos; is always true" verbose="Condition &apos;m_cond&apos; is always true" cwe="571">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="150" info="Condition &apos;m_cond&apos; is always true"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;nCount!=1&apos; is always false" verbose="Condition &apos;nCount!=1&apos; is always false" cwe="570">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="2256" info="Condition &apos;nCount!=1&apos; is always false"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="2251" info="Assignment &apos;nCount=1&apos;, assigned value is 1"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="81"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="3625"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="3627"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;pMessage&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;pMessage&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="810"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="804"/>
            <symbol>pMessage</symbol>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;bRet&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;bRet&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="3373"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="3350"/>
            <symbol>bRet</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;s_pStf&apos; can be reduced." verbose="The scope of the variable &apos;s_pStf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="1175"/>
            <symbol>s_pStf</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;strlen(pTd91msg-&gt;irai_uke_date)&apos; is less than zero." verbose="The unsigned expression &apos;strlen(pTd91msg-&gt;irai_uke_date)&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="2341" info="Unsigned less than zero"/>
            <symbol>strlen(pTd91msg-&gt;irai_uke_date)</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;bRegist&apos; shadows outer variable" verbose="Local variable &apos;bRegist&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="760" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="730" info="Shadowed declaration"/>
            <symbol>bRegist</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;bRegist&apos; shadows outer variable" verbose="Local variable &apos;bRegist&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="976" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="730" info="Shadowed declaration"/>
            <symbol>bRegist</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;pTd91msg&apos; shadows outer variable" verbose="Local variable &apos;pTd91msg&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="1032" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="736" info="Shadowed declaration"/>
            <symbol>pTd91msg</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="1193" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="1143" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;num&apos; shadows outer variable" verbose="Local variable &apos;num&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="2845" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="2765" info="Shadowed declaration"/>
            <symbol>num</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;rc&apos; shadows outer variable" verbose="Local variable &apos;rc&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="2816" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="2802" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;rc&apos; shadows outer variable" verbose="Local variable &apos;rc&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="2877" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="2802" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;pList&apos; shadows outer variable" verbose="Local variable &apos;pList&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="3006" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="2979" info="Shadowed declaration"/>
            <symbol>pList</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;nRet&apos; shadows outer variable" verbose="Local variable &apos;nRet&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="3199" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="3157" info="Shadowed declaration"/>
            <symbol>nRet</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bMultiple&apos; is assigned a value that is never used." verbose="Variable &apos;bMultiple&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="2006"/>
            <symbol>bMultiple</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nLocate&apos; is assigned a value that is never used." verbose="Variable &apos;nLocate&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="2172"/>
            <symbol>nLocate</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="2173"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nCount&apos; is assigned a value that is never used." verbose="Variable &apos;nCount&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="2185"/>
            <symbol>nCount</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nLocate&apos; is assigned a value that is never used." verbose="Variable &apos;nLocate&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="2239"/>
            <symbol>nLocate</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;num&apos; is assigned a value that is never used." verbose="Variable &apos;num&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvD91ToDoList.cpp" line="2929"/>
            <symbol>num</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvDRSelPage::hwndPatByDrList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvDRSelPage::hwndPatByDrList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="83"/>
            <symbol>HvDRSelPage::hwndPatByDrList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvDRSelPage::hwndOpenKarte&apos; is not initialized in the constructor." verbose="Member variable &apos;HvDRSelPage::hwndOpenKarte&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="83"/>
            <symbol>HvDRSelPage::hwndOpenKarte</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvDRSelPage::hwndUnlink&apos; is not initialized in the constructor." verbose="Member variable &apos;HvDRSelPage::hwndUnlink&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="83"/>
            <symbol>HvDRSelPage::hwndUnlink</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvDRSelPage::hwndSrchPt&apos; is not initialized in the constructor." verbose="Member variable &apos;HvDRSelPage::hwndSrchPt&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="83"/>
            <symbol>HvDRSelPage::hwndSrchPt</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvDRSelPage::hwndPtId&apos; is not initialized in the constructor." verbose="Member variable &apos;HvDRSelPage::hwndPtId&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="83"/>
            <symbol>HvDRSelPage::hwndPtId</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvDRSelPage::hwndKanaName&apos; is not initialized in the constructor." verbose="Member variable &apos;HvDRSelPage::hwndKanaName&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="83"/>
            <symbol>HvDRSelPage::hwndKanaName</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvDRSelPage::hwndBirthDay&apos; is not initialized in the constructor." verbose="Member variable &apos;HvDRSelPage::hwndBirthDay&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="83"/>
            <symbol>HvDRSelPage::hwndBirthDay</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvDRSelPage::hwndLowAge&apos; is not initialized in the constructor." verbose="Member variable &apos;HvDRSelPage::hwndLowAge&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="83"/>
            <symbol>HvDRSelPage::hwndLowAge</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvDRSelPage::hwndHighAge&apos; is not initialized in the constructor." verbose="Member variable &apos;HvDRSelPage::hwndHighAge&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="83"/>
            <symbol>HvDRSelPage::hwndHighAge</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvDRSelPage::hwndLatestDate1&apos; is not initialized in the constructor." verbose="Member variable &apos;HvDRSelPage::hwndLatestDate1&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="83"/>
            <symbol>HvDRSelPage::hwndLatestDate1</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvDRSelPage::hwndLatestDate2&apos; is not initialized in the constructor." verbose="Member variable &apos;HvDRSelPage::hwndLatestDate2&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="83"/>
            <symbol>HvDRSelPage::hwndLatestDate2</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvDRSelPage::sex&apos; is not initialized in the constructor." verbose="Member variable &apos;HvDRSelPage::sex&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="83"/>
            <symbol>HvDRSelPage::sex</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvDRSelPage::nyuin&apos; is not initialized in the constructor." verbose="Member variable &apos;HvDRSelPage::nyuin&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="83"/>
            <symbol>HvDRSelPage::nyuin</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvDRSelPage::patData&apos; is not initialized in the constructor." verbose="Member variable &apos;HvDRSelPage::patData&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="83"/>
            <symbol>HvDRSelPage::patData</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvDRSelPage::patRecNum&apos; is not initialized in the constructor." verbose="Member variable &apos;HvDRSelPage::patRecNum&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="83"/>
            <symbol>HvDRSelPage::patRecNum</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvDRSelPage::profDate&apos; is not initialized in the constructor." verbose="Member variable &apos;HvDRSelPage::profDate&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="83"/>
            <symbol>HvDRSelPage::profDate</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="77"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;l&apos; can be reduced." verbose="The scope of the variable &apos;l&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="442"/>
            <symbol>l</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;no&apos; shadows outer variable" verbose="Local variable &apos;no&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="951" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="941" info="Shadowed declaration"/>
            <symbol>no</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;small_ctrls&apos; is assigned a value that is never used." verbose="Variable &apos;small_ctrls&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="120"/>
            <symbol>small_ctrls</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;n&apos; is assigned a value that is never used." verbose="Variable &apos;n&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="347"/>
            <symbol>n</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;cnt&apos; is assigned a value that is never used." verbose="Variable &apos;cnt&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="444"/>
            <symbol>cnt</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ilowAge&apos; is assigned a value that is never used." verbose="Variable &apos;ilowAge&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="535"/>
            <symbol>ilowAge</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ihighAge&apos; is assigned a value that is never used." verbose="Variable &apos;ihighAge&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="536"/>
            <symbol>ihighAge</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;cnt&apos; is assigned a value that is never used." verbose="Variable &apos;cnt&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPage.cpp" line="682"/>
            <symbol>cnt</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvDRSelPanel&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvDRSelPanel&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.hpp" line="25"/>
            <symbol>HvDRSelPanel</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" line="51"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" line="88"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" line="91"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;l&apos; can be reduced." verbose="The scope of the variable &apos;l&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" line="375"/>
            <symbol>l</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ilowAge&apos; can be reduced." verbose="The scope of the variable &apos;ilowAge&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" line="463"/>
            <symbol>ilowAge</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ihighAge&apos; can be reduced." verbose="The scope of the variable &apos;ihighAge&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" line="464"/>
            <symbol>ihighAge</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;no&apos; shadows outer variable" verbose="Local variable &apos;no&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" line="842" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" line="832" info="Shadowed declaration"/>
            <symbol>no</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;cnt&apos; is assigned a value that is never used." verbose="Variable &apos;cnt&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" line="377"/>
            <symbol>cnt</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;cnt&apos; is assigned a value that is never used." verbose="Variable &apos;cnt&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" line="588"/>
            <symbol>cnt</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: format" verbose="Unused variable: format" cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRSelPanel.cpp" line="656"/>
            <symbol>format</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvDRadLOGON&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvDRadLOGON&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRadLOGON.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRadLOGON.hpp" line="22"/>
            <symbol>HvDRadLOGON</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRadLOGON.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRadLOGON.cpp" line="75"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRadLOGON.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRadLOGON.cpp" line="78"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRadLOGON.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRadLOGON.cpp" line="360"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRadLOGON.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRadLOGON.cpp" line="384"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;uid&apos; can be reduced." verbose="The scope of the variable &apos;uid&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRadLOGON.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRadLOGON.cpp" line="207"/>
            <symbol>uid</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: pw" verbose="Unused variable: pw" cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRadLOGON.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvDRadLOGON.cpp" line="207"/>
            <symbol>pw</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;execCommand&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;execCommand&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.hpp" line="47" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvOrderMainPanel.hpp" line="44" info="Virtual function in base class"/>
            <symbol>execCommand</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;createTopButtons&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;createTopButtons&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.hpp" line="65" info="Function in derived class"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvOrderMainPanel.hpp" line="74" info="Virtual function in base class"/>
            <symbol>createTopButtons</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.hpp" line="76"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;clear&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;clear&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.cpp" line="837"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.cpp" line="826"/>
            <symbol>clear</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvFetalGrowthDialog::m_hButtonPatInfo&apos; is not initialized in the constructor." verbose="Member variable &apos;HvFetalGrowthDialog::m_hButtonPatInfo&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvFetalGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvFetalGrowthDialog.cpp" line="39"/>
            <symbol>HvFetalGrowthDialog::m_hButtonPatInfo</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvFetalGrowthDialog&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvFetalGrowthDialog&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvFetalGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvFetalGrowthDialog.hpp" line="21"/>
            <symbol>HvFetalGrowthDialog</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." cwe="686">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvFetalGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvFetalGrowthDialog.cpp" line="235"/>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;view&apos; shadows outer variable" verbose="Local variable &apos;view&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.cpp" line="625" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.cpp" line="410" info="Shadowed declaration"/>
            <symbol>view</symbol>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." cwe="686">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvFetalGrowthDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvFetalGrowthDialog.cpp" line="238"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bCtiPat&apos; is assigned a value that is never used." verbose="Variable &apos;bCtiPat&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEntryMainPanel.cpp" line="456"/>
            <symbol>bCtiPat</symbol>
        </error>
        <error id="virtualCallInConstructor" severity="warning" msg="Virtual function &apos;create&apos; is called from constructor &apos;HvHistNavi(void*,void*replace=NULL,long style=0L)&apos; at line 90. Dynamic binding is not used." verbose="Virtual function &apos;create&apos; is called from constructor &apos;HvHistNavi(void*,void*replace=NULL,long style=0L)&apos; at line 90. Dynamic binding is not used.">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.hpp" line="150" info="create is a virtual function"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="90" info="Calling create"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="646"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="665"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="813"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="941"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="942"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="955"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="1151"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cmpPrev&apos; can be reduced." verbose="The scope of the variable &apos;cmpPrev&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="892"/>
            <symbol>cmpPrev</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;li&apos; shadows outer variable" verbose="Local variable &apos;li&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="1564" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="1549" info="Shadowed declaration"/>
            <symbol>li</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;hControl&apos; is assigned a value that is never used." verbose="Variable &apos;hControl&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="335"/>
            <symbol>hControl</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rb&apos; is assigned a value that is never used." verbose="Variable &apos;rb&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="677"/>
            <symbol>rb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;cmpPrev&apos; is assigned a value that is never used." verbose="Variable &apos;cmpPrev&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="892"/>
            <symbol>cmpPrev</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;cmpPrev&apos; is assigned a value that is never used." verbose="Variable &apos;cmpPrev&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="901"/>
            <symbol>cmpPrev</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rb&apos; is assigned a value that is never used." verbose="Variable &apos;rb&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="1184"/>
            <symbol>rb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rb&apos; is assigned a value that is never used." verbose="Variable &apos;rb&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="1211"/>
            <symbol>rb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;hr&apos; is assigned a value that is never used." verbose="Variable &apos;hr&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="1418"/>
            <symbol>hr</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;hr&apos; is assigned a value that is never used." verbose="Variable &apos;hr&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="1443"/>
            <symbol>hr</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rb&apos; is assigned a value that is never used." verbose="Variable &apos;rb&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="1463"/>
            <symbol>rb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;li&apos; is assigned a value that is never used." verbose="Variable &apos;li&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="1600"/>
            <symbol>li</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rc&apos; is assigned a value that is never used." verbose="Variable &apos;rc&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNavi.cpp" line="1655"/>
            <symbol>rc</symbol>
        </error>
        <error id="invalidscanf" severity="warning" msg="sscanf() without field width limits can crash with huge input data." verbose="sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\012\012Sample program that can crash:\012\012#include &lt;stdio.h&gt;\012int main()\012{\012    char c[5];\012    scanf(&quot;%s&quot;, c);\012    return 0;\012}\012\012Typing in 5 or more characters may make the program crash. The correct usage here is &apos;scanf(&quot;%4s&quot;, c);&apos;, as the maximum field width does not include the terminating null byte.\012Source: http://linux.die.net/man/3/scanf\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c" cwe="119">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" line="1209"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" line="345"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" line="667"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" line="697"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" line="878"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" line="894"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" line="912"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" line="1041"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" line="1042"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" line="1061"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" line="1245"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" line="1366"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" line="1832"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;ri&apos; is assigned a value that is never used." verbose="Variable &apos;ri&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" line="1832"/>
            <symbol>ri</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;cIndex_kbn&apos; is assigned a value that is never used." verbose="Variable &apos;cIndex_kbn&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvHistNaviPage.cpp" line="2089"/>
            <symbol>cIndex_kbn</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvImportantMsgDialog&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvImportantMsgDialog&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvImportantMsgDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvImportantMsgDialog.hpp" line="22"/>
            <symbol>HvImportantMsgDialog</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvGPSelPanel&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvGPSelPanel&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvgpselpanel.hpp" line="102"/>
            <symbol>HvGPSelPanel</symbol>
        </error>
        <error id="wrongPrintfScanfArgNum" severity="warning" msg="sprintf format string requires 19 parameters but 20 are given." verbose="sprintf format string requires 19 parameters but 20 are given." cwe="685">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="4728"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="233"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="249"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="434"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="437"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;cOldStatus&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;cOldStatus&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="6585"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="6536"/>
            <symbol>cOldStatus</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cmmnt&apos; can be reduced." verbose="The scope of the variable &apos;cmmnt&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="4186"/>
            <symbol>cmmnt</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;szSubKacode&apos; can be reduced." verbose="The scope of the variable &apos;szSubKacode&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="4973"/>
            <symbol>szSubKacode</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rc&apos; can be reduced." verbose="The scope of the variable &apos;rc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="4978"/>
            <symbol>rc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;l&apos; can be reduced." verbose="The scope of the variable &apos;l&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="6708"/>
            <symbol>l</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="7009"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;types&apos; can be reduced." verbose="The scope of the variable &apos;types&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="7088"/>
            <symbol>types</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nCbnIdx&apos; can be reduced." verbose="The scope of the variable &apos;nCbnIdx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="7530"/>
            <symbol>nCbnIdx</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rc&apos; can be reduced." verbose="The scope of the variable &apos;rc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="7975"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;bResult&apos; shadows outer variable" verbose="Local variable &apos;bResult&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="2511" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="2500" info="Shadowed declaration"/>
            <symbol>bResult</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="3563" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="3501" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;n&apos; shadows outer variable" verbose="Local variable &apos;n&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="5375" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="5347" info="Shadowed declaration"/>
            <symbol>n</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;split_ctrls2&apos; is assigned a value that is never used." verbose="Variable &apos;split_ctrls2&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="1588"/>
            <symbol>split_ctrls2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;split_ctrls2_nokarte2&apos; is assigned a value that is never used." verbose="Variable &apos;split_ctrls2_nokarte2&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="1611"/>
            <symbol>split_ctrls2_nokarte2</symbol>
        </error>
        <error id="arrayIndexOutOfBoundsCond" severity="warning" msg="Either the condition &apos;lp&lt;1000&apos; is redundant or the array &apos;procName_Map[43]&apos; is accessed at index 999, which is out of bounds." verbose="Either the condition &apos;lp&lt;1000&apos; is redundant or the array &apos;procName_Map[43]&apos; is accessed at index 999, which is out of bounds." cwe="788">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="6932" info="Array index out of bounds"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="6931" info="Assuming that condition &apos;lp&lt;1000&apos; is not redundant"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nStatus&apos; is assigned a value that is never used." verbose="Variable &apos;nStatus&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="2464"/>
            <symbol>nStatus</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bResult&apos; is assigned a value that is never used." verbose="Variable &apos;bResult&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="2518"/>
            <symbol>bResult</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bResult&apos; is assigned a value that is never used." verbose="Variable &apos;bResult&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="2522"/>
            <symbol>bResult</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bExistData&apos; is assigned a value that is never used." verbose="Variable &apos;bExistData&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="3408"/>
            <symbol>bExistData</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;no&apos; is assigned a value that is never used." verbose="Variable &apos;no&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="3414"/>
            <symbol>no</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;cnt&apos; is assigned a value that is never used." verbose="Variable &apos;cnt&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="3421"/>
            <symbol>cnt</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;n1&apos; is assigned a value that is never used." verbose="Variable &apos;n1&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="3584"/>
            <symbol>n1</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvEMRMainPanel::cStatus&apos; is not initialized in the constructor." verbose="Member variable &apos;HvEMRMainPanel::cStatus&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="767"/>
            <symbol>HvEMRMainPanel::cStatus</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvEMRMainPanel::m_nCurNurseView&apos; is not initialized in the constructor." verbose="Member variable &apos;HvEMRMainPanel::m_nCurNurseView&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="767"/>
            <symbol>HvEMRMainPanel::m_nCurNurseView</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvEMRMainPanel::m_bAnnaihhyoCheck&apos; is not initialized in the constructor." verbose="Member variable &apos;HvEMRMainPanel::m_bAnnaihhyoCheck&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="767"/>
            <symbol>HvEMRMainPanel::m_bAnnaihhyoCheck</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvEMRMainPanel::bRsvStatusUpdatedflg&apos; is not initialized in the constructor." verbose="Member variable &apos;HvEMRMainPanel::bRsvStatusUpdatedflg&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="767"/>
            <symbol>HvEMRMainPanel::bRsvStatusUpdatedflg</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvUserMenuDialog&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvUserMenuDialog&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvUserMenuDialog.hpp" line="25"/>
            <symbol>HvUserMenuDialog</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;s_PFKey_Conv&apos; is always true" verbose="Condition &apos;s_PFKey_Conv&apos; is always true" cwe="571">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="9518" info="Condition &apos;s_PFKey_Conv&apos; is always true"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sumi&apos; is assigned a value that is never used." verbose="Variable &apos;sumi&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="5318"/>
            <symbol>sumi</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;cOldStatus&apos; is assigned a value that is never used." verbose="Variable &apos;cOldStatus&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="6585"/>
            <symbol>cOldStatus</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;num&apos; is assigned a value that is never used." verbose="Variable &apos;num&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="6682"/>
            <symbol>num</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bDspStEable&apos; is assigned a value that is never used." verbose="Variable &apos;bDspStEable&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvGPSelPanel.cpp" line="7977"/>
            <symbol>bDspStEable</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="649"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="1131"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="3180"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="5275"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="5781"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="5801"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="5814"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="8163"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="8599"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="8748"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="9616"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="10646"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="11011"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;|&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="901"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hMsg&apos; can be reduced." verbose="The scope of the variable &apos;hMsg&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="2130"/>
            <symbol>hMsg</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;word&apos; can be reduced." verbose="The scope of the variable &apos;word&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="2331"/>
            <symbol>word</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;pid&apos; can be reduced." verbose="The scope of the variable &apos;pid&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="2444"/>
            <symbol>pid</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nRtnCd&apos; can be reduced." verbose="The scope of the variable &apos;nRtnCd&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="2448"/>
            <symbol>nRtnCd</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;szDate&apos; can be reduced." verbose="The scope of the variable &apos;szDate&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="2449"/>
            <symbol>szDate</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;lRes&apos; can be reduced." verbose="The scope of the variable &apos;lRes&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="2452"/>
            <symbol>lRes</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nRetSql&apos; can be reduced." verbose="The scope of the variable &apos;nRetSql&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="4714"/>
            <symbol>nRetSql</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvNPSelPanel&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvNPSelPanel&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.hpp" line="97"/>
            <symbol>HvNPSelPanel</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;pPatient&apos; shadows outer variable" verbose="Local variable &apos;pPatient&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="2699" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="2491" info="Shadowed declaration"/>
            <symbol>pPatient</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;nSubPatCnt&apos; shadows outer variable" verbose="Local variable &apos;nSubPatCnt&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="3664" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="2493" info="Shadowed declaration"/>
            <symbol>nSubPatCnt</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;profValue&apos; shadows outer variable" verbose="Local variable &apos;profValue&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="4761" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="4435" info="Shadowed declaration"/>
            <symbol>profValue</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;pe&apos; shadows outer variable" verbose="Local variable &apos;pe&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="8442" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="8378" info="Shadowed declaration"/>
            <symbol>pe</symbol>
        </error>
        <error id="wrongPrintfScanfArgNum" severity="warning" msg="sprintf format string requires 13 parameters but 14 are given." verbose="sprintf format string requires 13 parameters but 14 are given." cwe="685">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="4078"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="166"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="286"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="289"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;l&apos; can be reduced." verbose="The scope of the variable &apos;l&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="6224"/>
            <symbol>l</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;num&apos; can be reduced." verbose="The scope of the variable &apos;num&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="6225"/>
            <symbol>num</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;l&apos; can be reduced." verbose="The scope of the variable &apos;l&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="6266"/>
            <symbol>l</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;l&apos; can be reduced." verbose="The scope of the variable &apos;l&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="6475"/>
            <symbol>l</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;l&apos; can be reduced." verbose="The scope of the variable &apos;l&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="6633"/>
            <symbol>l</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;l&apos; can be reduced." verbose="The scope of the variable &apos;l&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="6677"/>
            <symbol>l</symbol>
        </error>
        <error id="sprintfOverlappingData" severity="error" msg="Undefined behavior: Variable &apos;sCmdLine&apos; is used as parameter and destination in sprintf()." verbose="The variable &apos;sCmdLine&apos; is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): &quot;If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.&quot;" cwe="628">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="10490"/>
            <symbol>sCmdLine</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="7676"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="6294" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="6268" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="7983" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="7955" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shiftTooManyBitsSigned" severity="error" msg="Shifting signed 32-bit value by 31 bits is undefined behaviour" verbose="Shifting signed 32-bit value by 31 bits is undefined behaviour" cwe="758">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="6721" info="Shift"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="6226"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="6635"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="6678"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bSession&apos; is assigned a value that is never used." verbose="Variable &apos;bSession&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNPSelPanel.cpp" line="8029"/>
            <symbol>bSession</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nRightPos&apos; is assigned a value that is never used." verbose="Variable &apos;nRightPos&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="6080"/>
            <symbol>nRightPos</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bBufReadOnly&apos; is assigned a value that is never used." verbose="Variable &apos;bBufReadOnly&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="7161"/>
            <symbol>bBufReadOnly</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bBufReadOnly&apos; is assigned a value that is never used." verbose="Variable &apos;bBufReadOnly&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="7247"/>
            <symbol>bBufReadOnly</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvNoDateOdrList&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvNoDateOdrList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.hpp" line="34"/>
            <symbol>HvNoDateOdrList</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" line="60"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" line="63"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" line="89"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;nIndex&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;nIndex&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" line="1094"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" line="1092"/>
            <symbol>nIndex</symbol>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;nIndex&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;nIndex&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" line="1101"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" line="1099"/>
            <symbol>nIndex</symbol>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;nIndex&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;nIndex&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" line="1108"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" line="1106"/>
            <symbol>nIndex</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;a&apos; is assigned a value that is never used." verbose="Variable &apos;a&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" line="192"/>
            <symbol>a</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;id&apos; is assigned a value that is never used." verbose="Variable &apos;id&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvNoDateOdrList.cpp" line="881"/>
            <symbol>id</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="9449"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nBuf&apos; is assigned a value that is never used." verbose="Variable &apos;nBuf&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="9450"/>
            <symbol>nBuf</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;width&apos; is assigned a value that is never used." verbose="Variable &apos;width&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="10051"/>
            <symbol>width</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;height&apos; is assigned a value that is never used." verbose="Variable &apos;height&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="10052"/>
            <symbol>height</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bPTLockShMode&apos; is assigned a value that is never used." verbose="Variable &apos;bPTLockShMode&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvEMRMainPanel.cpp" line="10256"/>
            <symbol>bPTLockShMode</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvOrderMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvOrderMainPanel.cpp" line="171"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvOrderMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvOrderMainPanel.cpp" line="618"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvOrderMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvOrderMainPanel.cpp" line="636"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvOrderMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvOrderMainPanel.cpp" line="644"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;pid&apos; can be reduced." verbose="The scope of the variable &apos;pid&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvOrderMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvOrderMainPanel.cpp" line="239"/>
            <symbol>pid</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvOrderRadMainPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvOrderRadMainPanel.cpp" line="79"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvPtDpChk::m_hDlg&apos; is not initialized in the constructor." verbose="Member variable &apos;HvPtDpChk::m_hDlg&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="52"/>
            <symbol>HvPtDpChk::m_hDlg</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvPtDpChk::m_hPtIdList&apos; is not initialized in the constructor." verbose="Member variable &apos;HvPtDpChk::m_hPtIdList&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="52"/>
            <symbol>HvPtDpChk::m_hPtIdList</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvPtDpChk::m_hMsg&apos; is not initialized in the constructor." verbose="Member variable &apos;HvPtDpChk::m_hMsg&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="52"/>
            <symbol>HvPtDpChk::m_hMsg</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvPtDpChk::m_hOk&apos; is not initialized in the constructor." verbose="Member variable &apos;HvPtDpChk::m_hOk&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="52"/>
            <symbol>HvPtDpChk::m_hOk</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvPtDpChk::m_hCancel&apos; is not initialized in the constructor." verbose="Member variable &apos;HvPtDpChk::m_hCancel&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="52"/>
            <symbol>HvPtDpChk::m_hCancel</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvPtDpChk::m_selectedPat&apos; is not initialized in the constructor." verbose="Member variable &apos;HvPtDpChk::m_selectedPat&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="52"/>
            <symbol>HvPtDpChk::m_selectedPat</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvPtDpChk::m_bRefMode&apos; is not initialized in the constructor." verbose="Member variable &apos;HvPtDpChk::m_bRefMode&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="52"/>
            <symbol>HvPtDpChk::m_bRefMode</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;if(readOnly)&apos; is redundant or there is possible null pointer dereference: readOnly." verbose="Either the condition &apos;if(readOnly)&apos; is redundant or there is possible null pointer dereference: readOnly." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="464" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="499" info="Assuming that condition &apos;if(readOnly)&apos; is not redundant"/>
            <symbol>readOnly</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rc&apos; can be reduced." verbose="The scope of the variable &apos;rc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="568"/>
            <symbol>rc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;pMsg&apos; can be reduced." verbose="The scope of the variable &apos;pMsg&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="578"/>
            <symbol>pMsg</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;rc&apos; shadows outer variable" verbose="Local variable &apos;rc&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="568" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="532" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;rc&apos; shadows outer variable" verbose="Local variable &apos;rc&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="543" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="532" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;ret&apos; shadows outer variable" verbose="Local variable &apos;ret&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="646" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="567" info="Shadowed declaration"/>
            <symbol>ret</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;rc&apos; shadows outer variable" verbose="Local variable &apos;rc&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="651" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="568" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rc&apos; is assigned a value that is never used." verbose="Variable &apos;rc&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvPtDpChk.cpp" line="365"/>
            <symbol>rc</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvTeamAdd::m_hCmbOrderKa&apos; is not initialized in the constructor." verbose="Member variable &apos;HvTeamAdd::m_hCmbOrderKa&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamAdd.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamAdd.cpp" line="33"/>
            <symbol>HvTeamAdd::m_hCmbOrderKa</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvTeamAdd::m_hCmbOrderDr&apos; is not initialized in the constructor." verbose="Member variable &apos;HvTeamAdd::m_hCmbOrderDr&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamAdd.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamAdd.cpp" line="33"/>
            <symbol>HvTeamAdd::m_hCmbOrderDr</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvTeamAdd::m_vStaff&apos; is not initialized in the constructor." verbose="Member variable &apos;HvTeamAdd::m_vStaff&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamAdd.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamAdd.cpp" line="33"/>
            <symbol>HvTeamAdd::m_vStaff</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;HvTeamAdd::m_nStaff&apos; is not initialized in the constructor." verbose="Member variable &apos;HvTeamAdd::m_nStaff&apos; is not initialized in the constructor." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamAdd.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamAdd.cpp" line="33"/>
            <symbol>HvTeamAdd::m_nStaff</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvRiSelPanel&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvRiSelPanel&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.hpp" line="114"/>
            <symbol>HvRiSelPanel</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: rc" verbose="Unused variable: rc" cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamAdd.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamAdd.cpp" line="447"/>
            <symbol>rc</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="82"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="188"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="191"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;num&apos; can be reduced." verbose="The scope of the variable &apos;num&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="294"/>
            <symbol>num</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;tmpDate&apos; can be reduced." verbose="The scope of the variable &apos;tmpDate&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="383"/>
            <symbol>tmpDate</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="942"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;j&apos; can be reduced." verbose="The scope of the variable &apos;j&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="942"/>
            <symbol>j</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;lRs&apos; can be reduced." verbose="The scope of the variable &apos;lRs&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="944"/>
            <symbol>lRs</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;tmpDate&apos; can be reduced." verbose="The scope of the variable &apos;tmpDate&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="945"/>
            <symbol>tmpDate</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sXx_sybt&apos; can be reduced." verbose="The scope of the variable &apos;sXx_sybt&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="946"/>
            <symbol>sXx_sybt</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sqlRc&apos; can be reduced." verbose="The scope of the variable &apos;sqlRc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="1597"/>
            <symbol>sqlRc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;lRet&apos; is assigned a value that is never used." verbose="Variable &apos;lRet&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="266"/>
            <symbol>lRet</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nNameCnt&apos; is assigned a value that is never used." verbose="Variable &apos;nNameCnt&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="500"/>
            <symbol>nNameCnt</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nKindCnt&apos; is assigned a value that is never used." verbose="Variable &apos;nKindCnt&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="500"/>
            <symbol>nKindCnt</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nXXSybtCnt&apos; is assigned a value that is never used." verbose="Variable &apos;nXXSybtCnt&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="500"/>
            <symbol>nXXSybtCnt</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;nAuthKnsCnt&apos; is assigned a value that is never used." verbose="Variable &apos;nAuthKnsCnt&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="501"/>
            <symbol>nAuthKnsCnt</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: sSerchCD" verbose="Unused variable: sSerchCD" cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="499"/>
            <symbol>sSerchCD</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;cnt1&apos; is assigned a value that is never used." verbose="Variable &apos;cnt1&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="814"/>
            <symbol>cnt1</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;cnt2&apos; is assigned a value that is never used." verbose="Variable &apos;cnt2&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="814"/>
            <symbol>cnt2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;lRs&apos; is assigned a value that is never used." verbose="Variable &apos;lRs&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="815"/>
            <symbol>lRs</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="942"/>
            <symbol>i</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;j&apos; is assigned a value that is never used." verbose="Variable &apos;j&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="942"/>
            <symbol>j</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;lRs&apos; is assigned a value that is never used." verbose="Variable &apos;lRs&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="944"/>
            <symbol>lRs</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;sqlRc&apos; is assigned a value that is never used." verbose="Variable &apos;sqlRc&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvRiSelPanel.cpp" line="1597"/>
            <symbol>sqlRc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;hWndParent&apos; is assigned a value that is never used." verbose="Variable &apos;hWndParent&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvUnapprovalSelPage.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvUnapprovalSelPage.cpp" line="81"/>
            <symbol>hWndParent</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;HvTeamList&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;HvTeamList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.hpp" line="41"/>
            <symbol>HvTeamList</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;plistSybtCd!=NULL&apos; is always true" verbose="Condition &apos;plistSybtCd!=NULL&apos; is always true" cwe="571">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" line="3158" info="Condition &apos;plistSybtCd!=NULL&apos; is always true"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;if(pTeam)&apos; is redundant or there is possible null pointer dereference: pTeam." verbose="Either the condition &apos;if(pTeam)&apos; is redundant or there is possible null pointer dereference: pTeam." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" line="1501" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" line="1582" info="Assuming that condition &apos;if(pTeam)&apos; is not redundant"/>
            <symbol>pTeam</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" line="92"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" line="95"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sSTNewDate&apos; can be reduced." verbose="The scope of the variable &apos;sSTNewDate&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" line="1067"/>
            <symbol>sSTNewDate</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sEDNewDate&apos; can be reduced." verbose="The scope of the variable &apos;sEDNewDate&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" line="1068"/>
            <symbol>sEDNewDate</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;a&apos; is assigned a value that is never used." verbose="Variable &apos;a&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" line="195"/>
            <symbol>a</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;id&apos; is assigned a value that is never used." verbose="Variable &apos;id&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" line="1039"/>
            <symbol>id</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rc&apos; is assigned a value that is never used." verbose="Variable &apos;rc&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvTeamList.cpp" line="3096"/>
            <symbol>rc</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\HvUserMenuDialog.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\HvUserMenuDialog.cpp" line="36"/>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;array&apos; shadows outer variable" verbose="Local variable &apos;array&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01PTBAS.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01PTBAS.cpp" line="228" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01PTBAS.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01PTBAS.cpp" line="164" info="Shadowed declaration"/>
            <symbol>array</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;if(pTemp2)&apos; is redundant or there is possible null pointer dereference: pTemp2." verbose="Either the condition &apos;if(pTemp2)&apos; is redundant or there is possible null pointer dereference: pTemp2." cwe="476">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" line="551" info="Null pointer dereference"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" line="566" info="Assuming that condition &apos;if(pTemp2)&apos; is not redundant"/>
            <symbol>pTemp2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;bSameData&apos; can be reduced." verbose="The scope of the variable &apos;bSameData&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" line="483"/>
            <symbol>bSameData</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;rc&apos; shadows outer variable" verbose="Local variable &apos;rc&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" line="286" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" line="240" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;rc&apos; shadows outer variable" verbose="Local variable &apos;rc&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" line="355" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" line="286" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="shadowVar" severity="style" msg="Local variable &apos;rc&apos; shadows outer variable" verbose="Local variable &apos;rc&apos; shadows outer variable" cwe="398">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" line="390" info="Shadow variable"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" line="286" info="Shadowed declaration"/>
            <symbol>rc</symbol>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;l&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;l&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD02TNLST.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD02TNLST.cpp" line="217"/>
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD02TNLST.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD02TNLST.cpp" line="194"/>
            <symbol>l</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;b&apos; is assigned a value that is never used." verbose="Variable &apos;b&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD01Today.cpp" line="172"/>
            <symbol>b</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;l&apos; is assigned a value that is never used." verbose="Variable &apos;l&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD02TNLST.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD02TNLST.cpp" line="217"/>
            <symbol>l</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;b&apos; is assigned a value that is never used." verbose="Variable &apos;b&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD06SYHCO.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD06SYHCO.cpp" line="154"/>
            <symbol>b</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;num&apos; is assigned a value that is never used." verbose="Variable &apos;num&apos; is assigned a value that is never used." cwe="563">
            <location file0="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD06SYHCO.cpp" file="C:\RTC_workspace_KOMIC\cisv300\src\common\hvD06SYHCO.cpp" line="199"/>
            <symbol>num</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Cppcheck cannot find all the include files (use --check-config for details)" verbose="Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project&apos;s include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config."/>
    </errors>
</results>
